<message message-id="20081016170706.1CFD79AC0F3@socket.gnome.org" list="org.gnome.svn-commits-list" id="24bohcwb6f3sgmio" type="checkins" date="2008-10-16T17:07:05Z" year="2008-01-01" year-month="2008-10-01" year-month-day="2008-10-16" thread-id="24bohcwb6f3sgmio"><headers><envelope-from-line>Thu Oct 16 09:07:21 2008</envelope-from-line><from personal="tko@svn.gnome.org" address="tko@svn.gnome.org">tko@svn.gnome.org</from><to personal="svn-commits-list@gnome.org" address="svn-commits-list@gnome.org">svn-commits-list@gnome.org</to><subject normal="gobject-introspection r730 - in trunk: . girepository giscanner tests/types tools">gobject-introspection r730 - in trunk: . girepository giscanner tests/types tools</subject><received>from srv-117c-be06.markmail.marklogic.com ([172.19.8.46])
          by mail-1.a.markmail.int (JAMES SMTP Server 2.3.1) with SMTP ID 685
          for &lt;jefferson.lang.bennett@a.markmail.org&gt;;
          Thu, 16 Oct 2008 09:07:20 -0800 (GMT-08:00)</received><received>from menubar.gnome.org (slb-117n.markmail.marklogic.com [172.19.8.33])
	by mgw-1.public.markmail.int (Postfix) with ESMTP id 660E72908005
	for &lt;jefferson.lang.bennett@a.markmail.org&gt;; Thu, 16 Oct 2008 10:06:57 -0700 (PDT)</received><received>from menubar.gnome.org (localhost.localdomain [127.0.0.1])
	by menubar.gnome.org (Postfix) with ESMTP id 1D3127501EB;
	Thu, 16 Oct 2008 17:07:20 +0000 (GMT)</received><x-original-to>svn-commits-list@gnome.org</x-original-to><delivered-to>svn-commits-list@gnome.org</delivered-to><received>from localhost (localhost.localdomain [127.0.0.1])
	by menubar.gnome.org (Postfix) with ESMTP id 63C417500BA
	for &lt;svn-commits-list@gnome.org&gt;; Thu, 16 Oct 2008 17:07:16 +0000 (GMT)</received><x-virus-scanned>by amavisd-new at gnome.org</x-virus-scanned><x-spam-flag>NO</x-spam-flag><x-spam-score>-2.445</x-spam-score><x-spam-level/><x-spam-status>No, score=-2.445 tagged_above=-999 required=2
	tests=[BAYES_00=-2.599, TW_VF=0.077, TW_YY=0.077]</x-spam-status><x-amavis-os-fingerprint>Linux 2.6 (newer, 3) (up: 248 hrs), (distance 18,
	link: ethernet/modem), [91.189.93.3]</x-amavis-os-fingerprint><received>from menubar.gnome.org ([127.0.0.1])
	by localhost (menubar.gnome.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id jc9-5OOyaD2N for &lt;svn-commits-list@gnome.org&gt;;
	Thu, 16 Oct 2008 17:07:09 +0000 (GMT)</received><received>from socket.gnome.org (cobalt.canonical.com [91.189.93.3])
	by menubar.gnome.org (Postfix) with ESMTP id 034B57500EA
	for &lt;svn-commits-list@gnome.org&gt;; Thu, 16 Oct 2008 17:07:08 +0000 (GMT)</received><received>by socket.gnome.org (Postfix, from userid 6916)
	id 1CFD79AC0F3; Thu, 16 Oct 2008 17:07:05 +0000 (UTC)</received><mime-version>1.0</mime-version><keywords>gobject-introspection</keywords><message-id>20081016170706.1CFD79AC0F3@socket.gnome.org</message-id><date>Thu, 16 Oct 2008 17:07:05 +0000 (UTC)</date><x-topics>gobject-introspection</x-topics><x-beenthere>svn-commits-list@gnome.org</x-beenthere><x-mailman-version>2.1.10</x-mailman-version><precedence>list</precedence><list-id>SVN commits &lt;svn-commits-list.gnome.org&gt;</list-id><list-unsubscribe>&lt;http://mail.gnome.org/mailman/options/svn-commits-list&gt;,
	&lt;mailto:svn-commits-list-request@gnome.org?subject=unsubscribe&gt;</list-unsubscribe><list-archive>&lt;/archives/svn-commits-list&gt;</list-archive><list-post>&lt;mailto:svn-commits-list@gnome.org&gt;</list-post><list-help>&lt;mailto:svn-commits-list-request@gnome.org?subject=help&gt;</list-help><list-subscribe>&lt;http://mail.gnome.org/mailman/listinfo/svn-commits-list&gt;,
	&lt;mailto:svn-commits-list-request@gnome.org?subject=subscribe&gt;</list-subscribe><content-type>text/plain; charset="utf-8"</content-type><content-transfer-encoding>base64</content-transfer-encoding><sender>svn-commits-list-bounces@gnome.org</sender><errors-to>svn-commits-list-bounces@gnome.org</errors-to></headers><normalized-references><normalized-message-id>20081016170706.1CFD79AC0F3@socket.gnome.org</normalized-message-id></normalized-references><body type="text/plain; charset=&quot;utf-8&quot;"><para depth="0">Author: tko
Date: Thu Oct 16 17:07:05 2008
New Revision: 730
URL: <url>http://svn.gnome.org/viewvc/gobject-introspection?rev=730&amp;view=rev</url>

</para><para depth="0">Log:
2008-10-16  Tommi Komulainen  &lt;<email>tommi.komulainen@iki.fi</email>&gt;

</para><para depth="0">	Bug 556543 â€“ reduce compiler warnings

</para><para depth="0">	* girepository/ginfo.c:
	* girepository/girepository.c (register_internal,
	count_interfaces, find_interface, find_namespace_version,
	parse_version, g_irepository_require):
	* girepository/girmodule.c (g_ir_module_build_typelib):
	* girepository/girnode.c (init_stats, dump_stats,
	_g_irnode_init_stats, _g_irnode_dump_stats,
	g_ir_node_can_have_member):
	* girepository/girparser.c (firstpass_end_element_handler,
	locate_gir, parse_basic, parse_type_internal, resolve_aliases,
	start_alias, start_type, end_type_top, parse_include, cleanup,
	post_filter):
	* girepository/gtypelib.c (validate_function_blob, validate_enum_blob):
	* giscanner/giscannermodule.c (directive_get_options,
	type_get_child_list):
	* giscanner/scannerlexer.l (parse_gtkdoc):
	* giscanner/scannerparser.y (ctype_free):
	* giscanner/sourcescanner.c:
	* giscanner/sourcescanner.h (gi_source_scanner_parse_macros):
	* tests/types/gitesttypes.c:
	* tools/compiler.c (main):
	* tools/generate.c (write_repository): Remove unused variables
	and code, add missing includes, declarations and case
	statements.

</para><para depth="0">Modified:
   trunk/ChangeLog
   trunk/girepository/ginfo.c
   trunk/girepository/girepository.c
   trunk/girepository/girmodule.c
   trunk/girepository/girnode.c
   trunk/girepository/girparser.c
   trunk/girepository/gtypelib.c
   trunk/giscanner/giscannermodule.c
   trunk/giscanner/scannerlexer.l
   trunk/giscanner/scannerparser.y
   trunk/giscanner/sourcescanner.c
   trunk/giscanner/sourcescanner.h
   trunk/tests/types/gitesttypes.c
   trunk/tools/compiler.c
   trunk/tools/generate.c

</para><para depth="0">Modified: trunk/girepository/ginfo.c
==============================================================================
--- trunk/girepository/ginfo.c	(original)
+++ trunk/girepository/ginfo.c	Thu Oct 16 17:07:05 2008
@@ -19,6 +19,7 @@
  */

</para><para depth="0"> #include &lt;stdlib.h&gt;
+#include &lt;string.h&gt;

</para><para depth="0"> #include &lt;glib.h&gt;
 #include &lt;glib-object.h&gt;

</para><para depth="0">Modified: trunk/girepository/girepository.c
==============================================================================
--- trunk/girepository/girepository.c	(original)
+++ trunk/girepository/girepository.c	Thu Oct 16 17:07:05 2008
@@ -23,6 +23,7 @@

</para><para depth="0"> #include &lt;stdio.h&gt;
 #include &lt;string.h&gt;
+#include &lt;stdlib.h&gt;

</para><para depth="0"> #include &lt;glib.h&gt;
 #include &lt;glib/gprintf.h&gt;
@@ -261,8 +262,6 @@
   Header *header;
   const gchar *namespace;
   const gchar *version;
-  gboolean was_loaded;
-  gboolean currently_lazy;

</para><para depth="0">   g_return_val_if_fail (typelib != NULL, FALSE);

</para><para depth="0">@@ -418,17 +417,6 @@
   return get_repository (NULL);
 }

</para><para depth="0">-static void 
-count_interfaces (gpointer key,
-		  gpointer value,
-		  gpointer data)
-{
-  guchar *typelib = ((GTypelib *) value)-&gt;data;
-  gint *n_interfaces = (gint *)data;
-  
-  *n_interfaces += ((Header *)typelib)-&gt;n_local_entries;
-}
-
 /**
  * g_irepository_get_n_infos
  * @repository: A #GIRepository, may be %NULL for the default
@@ -478,7 +466,6 @@
   IfaceData *iface_data = (IfaceData *)data;
   gint index;
   gint n_entries;
-  guint32 offset;
   const gchar *name;
   const gchar *type;
   DirEntry *entry;    
@@ -804,7 +791,6 @@

</para><para depth="0">   for (ldir = search_path; ldir; ldir = ldir-&gt;next)
     {
-      Header *header;
       char *path = g_build_filename (ldir-&gt;data, fname, NULL);

</para><para depth="0">       mfile = g_mapped_file_new (path, FALSE, &amp;error);
@@ -827,7 +813,7 @@
 	       int *minor)
 {
   const char *dot;
-  const char *end;
+  char *end;

</para><para depth="0">   *major = strtol (version, &amp;end, 10);
   dot = strchr (version, '.');
@@ -1012,15 +998,11 @@
 		       GIRepositoryLoadFlags flags,
 		       GError       **error)
 {
-  const char *dir;
   GMappedFile *mfile;
   gboolean ret = FALSE;
-  GError *error1 = NULL;
   Header *header;
   GTypelib *typelib = NULL;
-  const gchar *typelib_namespace, *typelib_version, *shlib_fname;
-  GModule *module;
-  guint32 shlib;
+  const gchar *typelib_namespace, *typelib_version;
   gboolean allow_lazy = (flags &amp; G_IREPOSITORY_LOAD_FLAG_LAZY) &gt; 0;
   gboolean is_lazy;
   char *version_conflict = NULL;
@@ -1056,7 +1038,6 @@

</para><para depth="0">   if (mfile == NULL)
     {
-      const char *error_fmt;
       if (version != NULL)
 	g_set_error (error, G_IREPOSITORY_ERROR,
 		     G_IREPOSITORY_ERROR_TYPELIB_NOT_FOUND,

</para><para depth="0">Modified: trunk/girepository/girmodule.c
==============================================================================
--- trunk/girepository/girmodule.c	(original)
+++ trunk/girepository/girmodule.c	Thu Oct 16 17:07:05 2008
@@ -24,6 +24,9 @@
 #include "girmodule.h"
 #include "girnode.h"

</para><para depth="0">+void _g_irnode_init_stats (void);
+void _g_irnode_dump_stats (void);
+
 #define ALIGN_VALUE(this, boundary) \
   (( ((unsigned long)(this)) + (((unsigned long)(boundary)) -1)) &amp;<br/>(~(((unsigned long)(boundary))-1)))

</para><para depth="0">@@ -111,7 +114,7 @@
   }

</para><para depth="0">  restart:
-  init_stats ();
+  _g_irnode_init_stats ();
   strings = g_hash_table_new (g_str_hash, g_str_equal);
   types = g_hash_table_new (g_str_hash, g_str_equal);
   n_entries = g_list_length (module-&gt;entries);
@@ -243,7 +246,7 @@
       entry++;
     }

</para><para depth="0">-  dump_stats ();
+  _g_irnode_dump_stats ();

</para><para depth="0">   header-&gt;annotations = offset2;

</para><para depth="0">Modified: trunk/girepository/girnode.c
==============================================================================
--- trunk/girepository/girnode.c	(original)
+++ trunk/girepository/girnode.c	Thu Oct 16 17:07:05 2008
@@ -34,7 +34,7 @@
 static gulong unique_types_count = 0;

</para><para depth="0"> void
-init_stats (void)
+_g_irnode_init_stats (void)
 {
   string_count = 0;
   unique_string_count = 0;
@@ -45,7 +45,7 @@
 }

</para><para depth="0"> void
-dump_stats (void)
+_g_irnode_dump_stats (void)
 {
   g_message ("%lu strings (%lu before sharing), %lu bytes (%lu before<br/>sharing)",
 	     unique_string_count, string_count, unique_string_size, string_size);
@@ -870,6 +870,25 @@
     case G_IR_NODE_STRUCT:
     case G_IR_NODE_UNION:
       return TRUE;
+    /* list others individually rather than with default: so that compiler
+     * warns if new node types are added without adding them to the switch
+     */
+    case G_IR_NODE_INVALID:
+    case G_IR_NODE_FUNCTION:
+    case G_IR_NODE_CALLBACK:
+    case G_IR_NODE_ENUM:
+    case G_IR_NODE_FLAGS:
+    case G_IR_NODE_CONSTANT:
+    case G_IR_NODE_ERROR_DOMAIN:
+    case G_IR_NODE_PARAM:
+    case G_IR_NODE_TYPE:
+    case G_IR_NODE_PROPERTY:
+    case G_IR_NODE_SIGNAL:
+    case G_IR_NODE_VALUE:
+    case G_IR_NODE_VFUNC:
+    case G_IR_NODE_FIELD:
+    case G_IR_NODE_XREF:
+      return FALSE;
     };
   return FALSE;
 }

</para><para depth="0">Modified: trunk/girepository/girparser.c
==============================================================================
--- trunk/girepository/girparser.c	(original)
+++ trunk/girepository/girparser.c	Thu Oct 16 17:07:05 2008
@@ -116,8 +116,6 @@
 			       gpointer             user_data,
 			       GError             **error)
 {
-  ParseContext *ctx = user_data;
-
 }

</para><para depth="0"> static GMarkupParser firstpass_parser = 
@@ -136,8 +134,6 @@
   const gchar *const *dir;
   char *girname;
   char *path = NULL;
-  GSList *link;
-  gboolean firstpass = TRUE;

</para><para depth="0">   datadirs = g_get_system_data_dirs ();

</para><para depth="0">@@ -267,9 +263,6 @@
 {
   gint i;
   gint n_basic = G_N_ELEMENTS (basic_types);
-  gchar *temporary_type = NULL;
-  const gchar *start;
-  const gchar *end;

</para><para depth="0">   for (i = 0; i &lt; n_basic; i++)
     {
@@ -414,7 +407,7 @@
   g_free (temporary_type);
   return type;

</para><para depth="0">- error:
+/* error: */
   g_ir_node_free ((GIrNode *)type);
   g_free (temporary_type);  
   return NULL;
@@ -430,7 +423,7 @@
   seen_values = g_slist_prepend (seen_values, (char*)type);
   while (g_hash_table_lookup_extended (ctx-&gt;aliases, type, &amp;orig, &amp;value))
     {
-      g_debug ("Resolved: %s =&gt; %s", type, value);
+      g_debug ("Resolved: %s =&gt; %s", type, (char*)value);
       type = value;
       if (g_slist_find_custom (seen_values, type,
 			       (GCompareFunc)strcmp) != NULL)
@@ -444,11 +437,9 @@
 static GIrNodeType *
 parse_type (ParseContext *ctx, const gchar *type)
 {
-  gchar *str;
   GIrNodeType *node;
   const BasicTypeInfo *basic;
   gboolean in_glib, in_gobject;
-  gboolean matched_special = FALSE;

</para><para depth="0">   in_glib = strcmp (ctx-&gt;namespace, "GLib") == 0;
   in_gobject = strcmp (ctx-&gt;namespace, "GObject") == 0;
@@ -944,7 +935,6 @@
 {
   const gchar *name;
   const gchar *target;
-  const gchar *type;
   char *key;
   char *value;

</para><para depth="0">@@ -1474,6 +1464,28 @@
 		vfunc-&gt;is_varargs = TRUE;
 	      }
 	      break;
+	    /* list others individually rather than with default: so that compiler
+	     * warns if new node types are added without adding them to the switch
+	     */
+	    case G_IR_NODE_INVALID:
+	    case G_IR_NODE_ENUM:
+	    case G_IR_NODE_FLAGS:
+	    case G_IR_NODE_CONSTANT:
+	    case G_IR_NODE_ERROR_DOMAIN:
+	    case G_IR_NODE_PARAM:
+	    case G_IR_NODE_TYPE:
+	    case G_IR_NODE_PROPERTY:
+	    case G_IR_NODE_SIGNAL:
+	    case G_IR_NODE_VALUE:
+	    case G_IR_NODE_FIELD:
+	    case G_IR_NODE_XREF:
+	    case G_IR_NODE_STRUCT:
+	    case G_IR_NODE_BOXED:
+	    case G_IR_NODE_OBJECT:
+	    case G_IR_NODE_INTERFACE:
+	    case G_IR_NODE_UNION:
+	      g_assert_not_reached ();
+	      break;
 	    }
 	}
       ctx-&gt;type_stack = NULL;
@@ -1496,7 +1508,6 @@
     {
       const char *zero;
       const char *len;
-      int i;

</para><para depth="0">       typenode = (GIrNodeType *)g_ir_node_new (G_IR_NODE_TYPE);

</para><para depth="0">@@ -1604,7 +1615,6 @@
 static void
 end_type_recurse (ParseContext *ctx)
 {
-  GList *types;
   GIrNodeType *parent;
   GIrNodeType *param = NULL;

</para><para depth="0">@@ -2051,7 +2061,6 @@
 	       GError             **error)
 {
   ParseContext sub_ctx = { 0 };
-  GMarkupParseContext *sub_context;
   gchar *buffer;
   gsize length;
   char *girpath;
@@ -2748,7 +2757,6 @@
 {
   ParseContext *ctx = user_data;
   GList *m;
-  int line_number, char_number;

</para><para depth="0">   for (m = ctx-&gt;modules; m; m = m-&gt;next)
     g_ir_module_free (m-&gt;data);
@@ -2800,7 +2808,6 @@
   iter = module-&gt;entries;
   while (iter)
     {
-      GList *link = iter;
       GIrNode *node = iter-&gt;data;

</para><para depth="0">       iter = iter-&gt;next;

</para><para depth="0">Modified: trunk/girepository/gtypelib.c
==============================================================================
--- trunk/girepository/gtypelib.c	(original)
+++ trunk/girepository/gtypelib.c	Thu Oct 16 17:07:05 2008
@@ -808,7 +808,6 @@
 							   blob-&gt;signature,
 							   error);
       InterfaceTypeBlob *iface_type;
-      InterfaceBlob *iface;

</para><para depth="0">       if (!simple)
 	return FALSE;
@@ -1281,8 +1280,7 @@
 {
   GTypelib *typelib = ctx-&gt;typelib;
   EnumBlob *blob;
-  ValueBlob *v1, *v2;
-  gint i, j; 
+  gint i;

</para><para depth="0">   if (typelib-&gt;len &lt; offset + sizeof (EnumBlob))
     {

</para><para depth="0">Modified: trunk/giscanner/giscannermodule.c
==============================================================================
--- trunk/giscanner/giscannermodule.c	(original)
+++ trunk/giscanner/giscannermodule.c	Thu Oct 16 17:07:05 2008
@@ -126,7 +126,7 @@
 directive_get_options (PyGISourceDirective *self,
 		       void                *context)
 {
-  GSList *l, *symbols;
+  GSList *l;
   PyObject *list;
   int i = 0;

</para><para depth="0">@@ -327,7 +327,7 @@
 type_get_child_list (PyGISourceType *self,
 		     void           *context)
 {
-  GList *l, *symbols;
+  GList *l;
   PyObject *list;
   int i = 0;

</para><para depth="0">Modified: trunk/giscanner/scannerlexer.l
==============================================================================
--- trunk/giscanner/scannerlexer.l	(original)
+++ trunk/giscanner/scannerlexer.l	Thu Oct 16 17:07:05 2008
@@ -252,7 +252,6 @@
           char *ptr = g_strdup (parts[1]);
 	  char *start;
 	  char *end;
-	  char **option_parts, **option_part;

</para><para depth="0"> 	  options = NULL;
 	  start = strchr (ptr, '(');

</para><para depth="0">Modified: trunk/giscanner/scannerparser.y
==============================================================================
--- trunk/giscanner/scannerparser.y	(original)
+++ trunk/giscanner/scannerparser.y	Thu Oct 16 17:07:05 2008
@@ -43,6 +43,8 @@
 extern int yylex (GISourceScanner *scanner);
 static void yyerror (GISourceScanner *scanner, const char *str);

</para><para depth="0">+extern void ctype_free (GISourceType * type);
+
 static int last_enum_value = -1;
 static GHashTable *const_table = NULL;
 %}

</para><para depth="0">Modified: trunk/giscanner/sourcescanner.c
==============================================================================
--- trunk/giscanner/sourcescanner.c	(original)
+++ trunk/giscanner/sourcescanner.c	Thu Oct 16 17:07:05 2008
@@ -21,6 +21,7 @@
  */

</para><para depth="0"> #include "sourcescanner.h"
+#include &lt;string.h&gt;

</para><para depth="0"> GISourceSymbol *
 gi_source_symbol_new (GISourceSymbolType type)

</para><para depth="0">Modified: trunk/giscanner/sourcescanner.h
==============================================================================
--- trunk/giscanner/sourcescanner.h	(original)
+++ trunk/giscanner/sourcescanner.h	Thu Oct 16 17:07:05 2008
@@ -143,6 +143,8 @@
 						        const gchar      *filename);
 gboolean            gi_source_scanner_parse_file       (GISourceScanner<br/>*igenerator,
 						        FILE             *file);
+void                gi_source_scanner_parse_macros     (GISourceScanner<br/>*scanner,
+							GList            *filenames);
 void                gi_source_scanner_set_macro_scan   (GISourceScanner<br/>*scanner,
 							gboolean          macro_scan);
 GSList *            gi_source_scanner_get_symbols      (GISourceScanner<br/>*scanner);

</para><para depth="0">Modified: trunk/tests/types/gitesttypes.c
==============================================================================
--- trunk/tests/types/gitesttypes.c	(original)
+++ trunk/tests/types/gitesttypes.c	Thu Oct 16 17:07:05 2008
@@ -1,5 +1,6 @@

</para><para depth="0"> #include &lt;gitesttypes.h&gt;
+#include &lt;string.h&gt;

</para><para depth="0"> /* basic types */
 gboolean test_boolean (gboolean in)

</para><para depth="0">Modified: trunk/tools/compiler.c
==============================================================================
--- trunk/tools/compiler.c	(original)
+++ trunk/tools/compiler.c	Thu Oct 16 17:07:05 2008
@@ -169,7 +169,7 @@
 {
   GOptionContext *context;
   GError *error = NULL;
-  GList *c, *m, *modules; 
+  GList *m, *modules;
   gint i;
   g_typelib_check_sanity ();

</para><para depth="0">Modified: trunk/tools/generate.c
==============================================================================
--- trunk/tools/generate.c	(original)
+++ trunk/tools/generate.c	Thu Oct 16 17:07:05 2008
@@ -1121,7 +1121,6 @@
 		  gboolean      needs_prefix)
 {
   FILE *ofile;
-  gchar *ns;
   gint i, j;
   char **dependencies;
   GIRepository *repository;
</para><footer type="list-management" depth="0">_______________________________________________
SVN-commits-list mailing list (read only)
<url>http://mail.gnome.org/mailman/listinfo/svn-commits-list</url>

</footer><para depth="0">Want to limit the commits to a few modules? Go to above URL, log in to edit your<br/>options and select the modules ('topics') you want.
Module maintainer? It is possible to set the reply-to to your development<br/>mailing list. Email <email>svnmaster@gnome.org</email> if interested.
</para></body></message>