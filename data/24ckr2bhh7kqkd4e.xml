<message message-id="Pine.LNX.4.44.0406150928160.2508-100000@gannet.stats" list="org.r-project.r-help" id="24ckr2bhh7kqkd4e" type="users" date="2004-06-15T09:33:55+01:00" year="2004-01-01" year-month="2004-06-01" year-month-day="2004-06-15" thread-id="24ckr2bhh7kqkd4e"><headers><envelope-from-line>From ripley@stats.ox.ac.uk  Tue Jun 15 10:33:55 2004</envelope-from-line><from personal="Prof Brian Ripley" address="ripley@stats.ox.ac.uk">Prof Brian Ripley &lt;ripley@stats.ox.ac.uk&gt;</from><subject normal="[R] symbolic iteration">[R] symbolic iteration</subject><x-spam-checker-version>SpamAssassin 3.2.4 (2008-01-01) on
	spam-1.dev.markmail.int</x-spam-checker-version><x-spam-level/><x-spam-status>No, score=-2.0 required=5.0 tests=BAYES_00,MISSING_HEADERS,
	NO_RECEIVED,NO_RELAYS autolearn=disabled version=3.2.4</x-spam-status><date>Tue, 15 Jun 2004 09:33:55 +0100 (BST)</date><in-reply-to>&lt;20040615080604.GA24225@hkusua.hku.hk&gt;</in-reply-to><message-id>Pine.LNX.4.44.0406150928160.2508-100000@gannet.stats</message-id><content-type>text/plain; charset=iso-8859-1</content-type><mime-version>1.0</mime-version></headers><normalized-references><normalized-message-id>Pine.LNX.4.44.0406150928160.2508-100000@gannet.stats</normalized-message-id><normalized-in-reply-to>20040615080604.GA24225@hkusua.hku.hk</normalized-in-reply-to></normalized-references><body type="text/plain; charset=iso-8859-1"><para depth="0">
I don't see why this needs to be iterative: the computations could be done
in parallel.  But via a for loop  you could use

</para><para depth="0">for(i in 1:122) {
    nm &lt;- paste("L", i, sep="")
    assign(nm, log(get(nm))
}

</para><para depth="0">You would do better, I think, to have 122 similar data items in a list.

</para><para depth="0">datalist &lt;- lapply(1:122, function(x) get(paste("L", x, sep="")))

</para><para depth="0">Then you could just do

</para><para depth="0">logdatalist &lt;- lapply(datalist, log)

</para><para depth="0">and so on.

</para><para depth="0">On Tue, 15 Jun 2004, Jin Shusong wrote:

</para><quote depth="1"><quotepara depth="1">  I have 122 vectors named from L1 to L122.  Now I hope to
take log to each of the series, say 
L1 &lt;- log(L1)
...
L122&lt;-log(L122)

</quotepara><quotepara depth="1">Can anyone show me a iterative way to make the job simple.
I mean the way something like
for(i in 1:122){
  ...
}
or other similar methods.
</quotepara></quote><footer type="noise" depth="0">
</footer><footer type="signature" depth="0" hash="2689305138977736669">-- 
Brian D. Ripley,                  ripley at stats.ox.ac.uk
Professor of Applied Statistics,  <url>http://www.stats.ox.ac.uk/~ripley/</url>
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272866 (PA)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595

</footer></body></message>