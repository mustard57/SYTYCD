<message message-id="200707161713.l6GHD6oc024378@repoman.freebsd.org" list="org.freebsd.p4-projects" id="24c47ovblyarnaf7" type="bugs" date="2007-07-16T17:13:10" year="2007-01-01" year-month="2007-07-01" year-month-day="2007-07-16" thread-id="24c47ovblyarnaf7"><headers><envelope-from-line>From fli@FreeBSD.org  Mon Jul 16 17:13:08 2007</envelope-from-line><from personal="Fredrik Lindberg" address="fli@FreeBSD.org">Fredrik Lindberg &lt;fli@FreeBSD.org&gt;</from><subject normal="PERFORCE change 123599 for review">PERFORCE change 123599 for review</subject><date>Mon Jul 16 17:13:10 2007</date><message-id>200707161713.l6GHD6oc024378@repoman.freebsd.org</message-id><content-type>text/plain; charset=iso-8859-1</content-type><mime-version>1.0</mime-version></headers><normalized-references><normalized-message-id>200707161713.l6GHD6oc024378@repoman.freebsd.org</normalized-message-id></normalized-references><body type="text/plain; charset=iso-8859-1"><para depth="0"><url>http://perforce.freebsd.org/chv.cgi?CH=123599</url>

</para><para depth="0">Change 123599 by fli@fli_nexus on 2007/07/16 17:12:47

</para><para depth="0">	Save the original initialization argument from event_add() and
	pass it to remove_event() when we internally in the event system
	remove an event due to EOF errors and the like.
	This is to make sure that event handler initialization functions get
	the corrent arguments on close to allow them to terminate properly.

</para><para depth="0">Affected files ...

</para><para depth="0">.. //depot/projects/soc2007/fli-mdns_sd/mdnsd/event.c#5 edit
.. //depot/projects/soc2007/fli-mdns_sd/mdnsd/event.h#4 edit

</para><para depth="0">Differences ...

</para><para depth="0">==== //depot/projects/soc2007/fli-mdns_sd/mdnsd/event.c#5 (text+ko) ====

</para><para depth="0">@@ -100,7 +100,7 @@
 		ev = TAILQ_FIRST(&amp;evl-&gt;evl_events);
 		EV_WLOCK(ev);
 		ev-&gt;ev_flags |= EVENT_FLAG_DYING;
-		if (remove_event(evl, ev, NULL) == 1) {
+		if (remove_event(evl, ev, &amp;ev-&gt;ev_init_arg) == 1) {
 			EV_UNLOCK(ev);
 		}
 	}
@@ -163,7 +163,7 @@
 	ev-&gt;ev_refcnt--;
 	if (ev-&gt;ev_flags &amp; EVENT_FLAG_DYING) {
 		evl = ev-&gt;ev_evl;
-		if (remove_event(evl, ev, NULL) == 1) {
+		if (remove_event(evl, ev, &amp;ev-&gt;ev_init_arg) == 1) {
 			EV_UNLOCK(ev);
 		}
 	}
@@ -219,7 +219,7 @@

</para><para depth="0"> 		EV_WLOCK(ev);
 		if (kev.flags &amp; EV_EOF) {
-			if (remove_event(evl, ev, NULL) == 1) {
+			if (remove_event(evl, ev, &amp;ev-&gt;ev_init_arg) == 1) {
 				EV_UNLOCK(ev);
 			}
 			continue;
@@ -228,7 +228,7 @@
 		/* Event has been removed, delete if nobody is using it */
 		if (ev-&gt;ev_flags &amp; EVENT_FLAG_DYING) {
 			if (ev-&gt;ev_refcnt == 0)
-				remove_event(evl, ev, NULL);
+				remove_event(evl, ev, &amp;ev-&gt;ev_init_arg);
 			else {
 				EV_UNLOCK(ev);
 			}
@@ -301,7 +301,6 @@
 	int ret;
 	struct event *ev;
 	struct evgen *evg;
-	ev_arg ev_arg_init;
 	struct kevent kev;

</para><para depth="0"> 	MDNS_INIT_ASSERT(evl, evl_magic);
@@ -318,9 +317,9 @@
 		bzero(&amp;ev-&gt;ev_handler_arg, sizeof(ev_arg));

</para><para depth="0"> 	if (init_arg != NULL)
-		memcpy(&amp;ev_arg_init, init_arg, sizeof(ev_arg));
+		memcpy(&amp;ev-&gt;ev_init_arg, init_arg, sizeof(ev_arg));
 	else
-		bzero(&amp;ev_arg_init, sizeof(ev_arg));
+		bzero(&amp;ev-&gt;ev_init_arg, sizeof(ev_arg));

</para><para depth="0"> 	ev-&gt;ev_cb.ev_init.ptr = init;
 	ev-&gt;ev_type = type;
@@ -337,7 +336,7 @@
 	case EVENT_TYPE_IO:
 		if (init != NULL)
 			ret = ev-&gt;ev_cb.ev_init.io(EVENT_INIT_OPEN,
-			    &amp;ev-&gt;ev_data.io, ev_arg_init);
+			    &amp;ev-&gt;ev_data.io, ev-&gt;ev_init_arg);
 		if (ev-&gt;ev_data.io.evio_dir == EVENT_IO_READ)
 			kev.filter = EVFILT_READ;
 		else if (ev-&gt;ev_data.io.evio_dir == EVENT_IO_WRITE)
@@ -349,7 +348,7 @@
 	case EVENT_TYPE_TMR:
 		if (init != NULL)
 			ret = ev-&gt;ev_cb.ev_init.tmr(EVENT_INIT_OPEN,
-			    &amp;ev-&gt;ev_data.tmr, ev_arg_init);
+			    &amp;ev-&gt;ev_data.tmr, ev-&gt;ev_init_arg);
 		kev.filter = EVFILT_TIMER;
 		if (ev-&gt;ev_data.tmr.evtmr_oneshot)
 			kev.flags |= EV_ONESHOT;	
@@ -360,7 +359,7 @@
 	case EVENT_TYPE_SIG:
 		if (init != NULL)
 			ret = ev-&gt;ev_cb.ev_init.sig(EVENT_INIT_OPEN,
-			    &amp;ev-&gt;ev_data.sig, ev_arg_init);
+			    &amp;ev-&gt;ev_data.sig, ev-&gt;ev_init_arg);
 		kev.filter = EVFILT_SIGNAL;
 		signal(ev-&gt;ev_data.sig.evsig_signo, SIG_IGN);
 		kev.ident = ev-&gt;ev_data.sig.evsig_signo;
@@ -423,6 +422,13 @@
 	dprintf(DEBUG_EVENT, "Removing event ev=%x", ev);

</para><para depth="0"> 	if (remove_event(evl, ev, arg) == 1) {
+		/*
+		 * We failed to remove the event because it's in use,
+		 * make sure to save the passed argument so that it is
+		 * properly passed to remove_event() once the event
+		 * can be removed.
+		 */
+		memcpy(&amp;ev-&gt;ev_init_arg, arg, sizeof(ev_arg));
 		EV_UNLOCK(ev);
 	}

</para><para depth="0">==== //depot/projects/soc2007/fli-mdns_sd/mdnsd/event.h#4 (text+ko) ====

</para><para depth="0">@@ -148,6 +148,7 @@
 		} ev_init;
 	} ev_cb;
 	ev_arg ev_handler_arg; /* Callback argument */
+	ev_arg ev_init_arg; /* Init callback argument */

</para><para depth="0"> 	/*
 	 * Event type specific data
</para></body></message>