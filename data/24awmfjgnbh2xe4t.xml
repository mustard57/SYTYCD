<message message-id="f11a0de3-6159-4f9d-bf4a-63fd43e45d7e@25g2000hsx.googlegroups.com" list="com.googlegroups.clojure" id="24awmfjgnbh2xe4t" type="general" date="2008-08-28T17:41:17-07:00" year="2008-01-01" year-month="2008-08-01" year-month-day="2008-08-28" thread-id="3qz6hekwdi25elgs"><headers><envelope-from-line>Thu Sep 25 23:02:17 2008</envelope-from-line><from personal="Rich Hickey" address="richhic...@gmail.com">Rich Hickey &lt;richhic...@gmail.com&gt;</from><to personal="Clojure" address="clojure@googlegroups.com">Clojure &lt;clojure@googlegroups.com&gt;</to><subject normal="updating nested structure">Re: updating nested structure</subject><received>from srv-117d-be06.markmail.marklogic.com ([172.19.8.66])
          by mail-1.a.markmail.int (JAMES SMTP Server 2.3.1) with SMTP ID 84
          for &lt;vanessa.burch.hoover@a.markmail.org&gt;;
          Thu, 25 Sep 2008 23:02:17 -0800 (GMT-08:00)</received><received>from crawl-1.a.markmail.int (slb-117n.markmail.marklogic.com [172.19.8.33])
	by mgw-2.public.markmail.int (Postfix) with ESMTP id A0CB93B300B4
	for &lt;vanessa.burch.hoover@a.markmail.org&gt;; Fri, 26 Sep 2008 00:01:54 -0700 (PDT)</received><received>from crawl-1.a.markmail.int (localhost.localdomain [127.0.0.1])
	by crawl-1.a.markmail.int (8.13.8/8.13.8) with ESMTP id m8Q72HDk005893
	for &lt;vanessa.burch.hoover@a.markmail.org&gt;; Fri, 26 Sep 2008 00:02:17 -0700</received><received>(from crawler@localhost)
	by crawl-1.a.markmail.int (8.13.8/8.13.8/Submit) id m8Q71sHR005892
	for vanessa.burch.hoover@a.markmail.org; Fri, 26 Sep 2008 00:01:54 -0700</received><x-authentication-warning>crawl-1.a.markmail.int: crawler set sender to root@localhost using -r</x-authentication-warning><x-markmail-googlegroups-list>com.googlegroups.clojure</x-markmail-googlegroups-list><x-markmail-googlegroups-mid>44de0ea58a4da2cb</x-markmail-googlegroups-mid><mime-version>1.0</mime-version><received>by 10.100.41.4 with SMTP id o4mr103067ano.29.1219970477351; Thu, 28 
	Aug 2008 17:41:17 -0700 (PDT)</received><date>Thu, 28 Aug 2008 17:41:17 -0700 (PDT)</date><in-reply-to>&lt;724718da-a08f-40ad-9fa3-acda4c246919@i20g2000prf.googlegroups.com&gt;</in-reply-to><x-ip>69.126.67.148</x-ip><references>&lt;e8cb8359-83f0-4589-bba5-f6c2a2f22c52@q5g2000prf.googlegroups.com&gt; 
	&lt;03da44a8-a4fa-4ed5-a510-d5acee52bdc6@n33g2000pri.googlegroups.com&gt; 
	&lt;0848752b-6fa5-4fde-9642-0b972c496a92@v57g2000hse.googlegroups.com&gt; 
	&lt;6b2582cd-556e-43eb-affd-279ad841e0b8@k36g2000pri.googlegroups.com&gt; 
	&lt;b9829089-f2d8-4dca-a5c0-e35c3841bdd8@a1g2000hsb.googlegroups.com&gt; 
	&lt;724718da-a08f-40ad-9fa3-acda4c246919@i20g2000prf.googlegroups.com&gt;</references><user-agent>G2/1.0</user-agent><x-http-useragent>Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.4) 
	Gecko/20070509 Camino/1.5,gzip(gfe),gzip(gfe)</x-http-useragent><message-id>f11a0de3-6159-4f9d-bf4a-63fd43e45d7e@25g2000hsx.googlegroups.com</message-id><content-type>text/plain; charset=ISO-8859-1</content-type><content-transfer-encoding>7bit</content-transfer-encoding></headers><normalized-references><normalized-message-id>f11a0de3-6159-4f9d-bf4a-63fd43e45d7e@25g2000hsx.googlegroups.com</normalized-message-id><normalized-in-reply-to>724718da-a08f-40ad-9fa3-acda4c246919@i20g2000prf.googlegroups.com</normalized-in-reply-to><normalized-reference>e8cb8359-83f0-4589-bba5-f6c2a2f22c52@q5g2000prf.googlegroups.com</normalized-reference><normalized-reference>03da44a8-a4fa-4ed5-a510-d5acee52bdc6@n33g2000pri.googlegroups.com</normalized-reference><normalized-reference>0848752b-6fa5-4fde-9642-0b972c496a92@v57g2000hse.googlegroups.com</normalized-reference><normalized-reference>6b2582cd-556e-43eb-affd-279ad841e0b8@k36g2000pri.googlegroups.com</normalized-reference><normalized-reference>b9829089-f2d8-4dca-a5c0-e35c3841bdd8@a1g2000hsb.googlegroups.com</normalized-reference><normalized-reference>724718da-a08f-40ad-9fa3-acda4c246919@i20g2000prf.googlegroups.com</normalized-reference></normalized-references><body type="text/plain; charset=iso-8859-1"><para depth="0">
On Aug 28, 11:43 am, Parth Malwankar &lt;<email>parth.malwan...@gmail.com</email>&gt;
wrote:
</para><quote depth="1"><quotepara depth="1">On Aug 28, 8:08 pm, Rich Hickey &lt;<email>richhic...@gmail.com</email>&gt; wrote:

</quotepara><quote depth="2"><quotepara depth="2">On Aug 27, 10:37 pm, Parth Malwankar &lt;<email>parth.malwan...@gmail.com</email>&gt;
wrote:
</quotepara></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">On Aug 28, 12:10 am, Rich Hickey &lt;<email>richhic...@gmail.com</email>&gt; wrote:
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quote depth="4"><quotepara depth="4">I posted a variant here:
</quotepara></quote></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quote depth="4"><quotepara depth="4"><url>http://paste.lisp.org/display/65964</url>
</quotepara></quote></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">Rich,
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">It works very nicely. Thanks.
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">Just one thought in case the functions args are still being
decided on. Could we consider taking access path as a
vector rather than directly as function args.
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">Here is the use case I have in mind.
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">I think most access paths [:a :b :c] would be generated.
Nested structures would be something like
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">processor -&gt; GPRs (general purpose regs) -&gt; r0 r1 .. rN
          -&gt;  FPRs (floating point regs) -&gt; f0 f1 .. fN
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">fridge -&gt; fruits -&gt; apple mango ...
       -&gt; veggies -&gt; eggplant ...
       -&gt; diary -&gt; milk yoghurt ...
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">So the developer may set up something like a
(fridge-item-path (get-fruit)) =&gt; [:fruits :apple]
(processor-reg-path (get-reg-arg-from-instruction)) =&gt; [:gpr-set :r0]
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">With the current arg handling this is what we would need to do:
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">user=&gt; (item-path :mango)
[:fruits :mango]
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">user=&gt; (apply mk-get my-fridge (conj (item-path :mango) :quantity))
30
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">user=&gt; (apply mk-assoc my-fridge (conj (item-path :mango) :quantity
40))
{:fruits {:mango {:quantity 40, :color :yellow},
          :apple {:quantity 20, :color :red}},
  :diary-products {:milk {:quantity 1, :color :white,
                          :type :low-fat},
                   :yoghurt {:quantity 10, :color :pink,
                             :type :strawberry}}}
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">[formatting added above for readability]
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">In case the access path were vectors the above could become:
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">(mk-get my-fridge (item-path :mango) :quantity)
(mk-assoc my-fridge (item-path :mango) :quantity new-quantity)
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quote depth="3"><quotepara depth="3">Much less noise.
</quotepara></quote></quote><quotepara depth="1">
</quotepara><quote depth="2"><quotepara depth="2">I don't see this (partial path + separate last key) as a general way
of doing things. The only other way I would consider is the entire
path as a sequence:
</quotepara></quote><quotepara depth="1">
</quotepara><quote depth="2"><quotepara depth="2">(defn mk-get [m ks]
  (reduce get m ks))
</quotepara></quote><quotepara depth="1">
</quotepara><quote depth="2"><quotepara depth="2">(defn mk-assoc [m [k &amp; ks] v]
  (if ks
    (assoc m k (mk-assoc (get m k) ks v))
    (assoc m k v)))
</quotepara></quote><quotepara depth="1">
</quotepara><quote depth="2"><quotepara depth="2">;usage
(def nx {:a {:b {:c {:content [1 10] :other 2}}}})
</quotepara></quote><quotepara depth="1">
</quotepara><quote depth="2"><quotepara depth="2">(mk-get nx [:a :b :c :content])
-&gt; [1 10]
</quotepara></quote><quotepara depth="1">
</quotepara><quote depth="2"><quotepara depth="2">(mk-assoc nx [:a :b :c :content 0] 42)
-&gt; {:a {:b {:c {:other 2, :content [42 10]}}}}
</quotepara></quote><quotepara depth="1">
</quotepara><quote depth="2"><quotepara depth="2">(mk-assoc {} [:a :b :x] 42)
-&gt; {:a {:b {:x 42}}}
</quotepara></quote><quotepara depth="1">
Thanks Rich.
Sounds like a good idea to me. Works beautifully.

</quotepara><quotepara depth="1">user=&gt; (load-file "fruits.clj")
#'user/my-fridge
user=&gt; (mk-get my-fridge (item-quantity-path :mango))
30
user=&gt; (mk-assoc my-fridge (item-quantity-path :mango) 50)
{:fruits {:mango {:quantity 50, :color :yellow}, :apple {:quantity
20, :color :red}}, :diary-products {:yoghurt {:quantity
10, :color :pink, :type :strawberry}, :milk {:quantity
1, :color :white, :type :low-fat}}}
user=&gt;

</quotepara></quote><para depth="0">I've added get-in, assoc-in, and update-in to SVN rev 1010.
</para></body></message>