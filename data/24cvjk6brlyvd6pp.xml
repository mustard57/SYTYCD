<message message-id="1218059542.23608.1267375865@webmail.messagingengine.com" list="org.apache.ibatis.user-java" id="24cvjk6brlyvd6pp" type="users" date="2008-08-06T14:52:22-07:00" year="2008-01-01" year-month="2008-08-01" year-month-day="2008-08-06" thread-id="g74bqkcxges3s6ax"><headers><envelope-from-line>Wed Aug 06 16:49:16 2008</envelope-from-line><from personal="Harvey Kim" address="cashtag@fastmail.fm">Harvey Kim &lt;cashtag@fastmail.fm&gt;</from><to personal="ibatis user" address="user-java@ibatis.apache.org">ibatis user &lt;user-java@ibatis.apache.org&gt;</to><subject normal="Hibernate 3.2 Native SQL versus iBATIS">Re: Hibernate 3.2 Native SQL versus iBATIS</subject><received>from srv-117d-be06.markmail.marklogic.com ([172.19.8.66])
          by mail-1.a.markmail.int (JAMES SMTP Server 2.3.1) with SMTP ID 770
          for &lt;frederick.mccall.rios@a.markmail.org&gt;;
          Wed, 6 Aug 2008 14:56:33 -0700 (PDT)</received><received>from mail.apache.org (slb-117n.markmail.marklogic.com [172.19.8.33])
	by mgw-2.public.markmail.int (Postfix) with SMTP id 15FFF3B300BA
	for &lt;frederick.mccall.rios@a.markmail.org&gt;; Wed,  6 Aug 2008 14:56:33 -0700 (PDT)</received><received>(qmail 27556 invoked by uid 500); 6 Aug 2008 21:56:30 -0000</received><mailing-list>contact user-java-help@ibatis.apache.org; run by ezmlm</mailing-list><precedence>bulk</precedence><list-help>&lt;mailto:user-java-help@ibatis.apache.org&gt;</list-help><list-unsubscribe>&lt;mailto:user-java-unsubscribe@ibatis.apache.org&gt;</list-unsubscribe><list-post>&lt;mailto:user-java@ibatis.apache.org&gt;</list-post><list-id>&lt;user-java.ibatis.apache.org&gt;</list-id><reply-to>user-java@ibatis.apache.org</reply-to><delivered-to>mailing list user-java@ibatis.apache.org</delivered-to><received>(qmail 27545 invoked by uid 99); 6 Aug 2008 21:56:30 -0000</received><received>from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 06 Aug 2008 14:56:30 -0700</received><x-asf-spam-status>No, hits=-1.0 required=10.0
	tests=RCVD_IN_DNSWL_LOW,SPF_PASS</x-asf-spam-status><x-spam-check-by>apache.org</x-spam-check-by><received-spf>pass (athena.apache.org: domain of cashtag@fastmail.fm designates 66.111.4.25 as permitted sender)</received-spf><received>from [66.111.4.25] (HELO out1.smtp.messagingengine.com) (66.111.4.25)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 06 Aug 2008 21:55:31 +0000</received><received>from compute1.internal (compute1.internal [10.202.2.41])
	by out1.messagingengine.com (Postfix) with ESMTP id 333F4151C94
	for &lt;user-java@ibatis.apache.org&gt;; Wed,  6 Aug 2008 17:52:22 -0400 (EDT)</received><received>from web6.messagingengine.com ([10.202.2.215])
  by compute1.internal (MEProxy); Wed, 06 Aug 2008 17:52:22 -0400</received><received>by web6.messagingengine.com (Postfix, from userid 99)
	id 0DFB22092B; Wed,  6 Aug 2008 17:52:22 -0400 (EDT)</received><message-id>1218059542.23608.1267375865@webmail.messagingengine.com</message-id><x-sasl-enc>3VqnMcRfw8QQIwKdtuRf+/yxr55mlcMVvOyziKHohGVy 1218059542</x-sasl-enc><content-disposition>inline</content-disposition><content-transfer-encoding>quoted-printable</content-transfer-encoding><content-type>text/plain; charset="iso-8859-1"</content-type><mime-version>1.0</mime-version><x-mailer>MessagingEngine.com Webmail Interface</x-mailer><references>&lt;18857922.post@talk.nabble.com&gt;
 &lt;d4ebe7ab0808061245x3caa3df5ha4e79522efbb8135@mail.gmail.com&gt;
 &lt;16178eb10808061253s4d87f20dlf9898cda23ca407b@mail.gmail.com&gt;
 &lt;c593b8750808061302s132bb983v33d3d6e53c1741e6@mail.gmail.com&gt;
 &lt;3d3c4b7e0808061344p63e0bd52laa4faa3324000e7c@mail.gmail.com&gt;
 &lt;d4ebe7ab0808061348r647e7d9fwc707975fc2daa569@mail.gmail.com&gt;</references><in-reply-to>&lt;d4ebe7ab0808061348r647e7d9fwc707975fc2daa569@mail.gmail.com&gt;</in-reply-to><date>Wed, 06 Aug 2008 14:52:22 -0700</date><x-virus-checked>Checked by ClamAV on apache.org</x-virus-checked></headers><normalized-references><normalized-message-id>1218059542.23608.1267375865@webmail.messagingengine.com</normalized-message-id><normalized-in-reply-to>d4ebe7ab0808061348r647e7d9fwc707975fc2daa569@mail.gmail.com</normalized-in-reply-to><normalized-reference>18857922.post@talk.nabble.com</normalized-reference><normalized-reference>d4ebe7ab0808061245x3caa3df5ha4e79522efbb8135@mail.gmail.com</normalized-reference><normalized-reference>16178eb10808061253s4d87f20dlf9898cda23ca407b@mail.gmail.com</normalized-reference><normalized-reference>c593b8750808061302s132bb983v33d3d6e53c1741e6@mail.gmail.com</normalized-reference><normalized-reference>3d3c4b7e0808061344p63e0bd52laa4faa3324000e7c@mail.gmail.com</normalized-reference><normalized-reference>d4ebe7ab0808061348r647e7d9fwc707975fc2daa569@mail.gmail.com</normalized-reference></normalized-references><body type="text/plain; charset=&quot;iso-8859-1&quot;"><para depth="0">One thing you may consider ...

</para><para depth="0">I have been happy with ibatis 90% of the time. However, I had no choice
but to convert good chunk of my project from ibatis to JDBC in the past
because of a memory leak issue.  I've posed this question here in the
past but - here is the code that generated the memory leak:

</para><para depth="0">sqlMapClient.queryWithRowHandler("getLargeQuery", queryParameterDto,
this); 

</para><para depth="0">handleRow(Object someObject)
{
  Runtime r = Runtime.getRuntime();
  System.out.println("HANDLE ROW: free memory is: " + r.totalMemory() +
  " : " + r.freeMemory());       
  System.out.println("free memory is: " + r.totalMemory() + " : " +
  r.freeMemory());
  r.gc();
}

</para><para depth="0">Literally, this is the whole test code that was creating the memory
leak.  As you can see, there is no other java code that could possibly
be the culprit.  As I noticed the numbers decreasing with each
iteration, I decided to convert it to JDBC.  Bang! memory leak gone!  At
that point, I converted everything to JDBC.  After that, the same query
that was giving me java.lang.outOfMemory every single time disappeared
forever.  These queries are rather involved with 6 to 7 joins and a
"where" clause that would not fit on one page.  It's a shopping cart
application where the user can pick and choose their criteria so the
query can grow indefinitely.

</para><para depth="0">I'm only bringing this up again in the hopes that somebody will look
into the problem so that in the future I can convert it back to ibatis. 
All my other projects do use ibatis as most of the projects at our
company do not require complex queries that returns millions of rows. 
And I've been quite happy with them.

</para><para depth="0">But I've tried everything to fix it within ibatis - everything from
turning off caching (which I understand is the default) to using LRU,
MEMORY, ...  Maybe I just didn't understand how to tune it properly. 
But any explanation would be appreciated.  However, for now, it is fully
converted to JDBC and my customers are happy.

</para><para depth="0">Thanks

</para><para depth="0">On Wed, 6 Aug 2008 13:48:09 -0700, "Sundar Sankar"
&lt;<email>fatboysuns@gmail.com</email>&gt; said:
</para><quote depth="1"><quotepara depth="1">for Hibernate 2, they had something called as hibernate tools(which
apparently had a eclipse plug-in too) which could generate xmls and bean
classes. Am not sure if there is an upgraded version for hibernate 3 to
get
the annotations in place in the bean class.

</quotepara><quotepara depth="1">On Wed, Aug 6, 2008 at 1:44 PM, Fidel Viegas &lt;<email>fidel.viegas@gmail.com</email>&gt;
wrote:

</quotepara><quote depth="2"><quotepara depth="2">On Wed, Aug 6, 2008 at 9:02 PM, Jeff Butler &lt;<email>jeffgbutler@gmail.com</email>&gt; wrote:
</quotepara><quote depth="3"><quotepara depth="3">If I may interject too...

</quotepara><quotepara depth="3">You could use ibator to guickly generate a basic iBATIS based CRUD layer
and
then just focus on the complex queries.  This can give you some of the
productivity benefits of Hibernate, and still leave you free to code the
complex stuff in an efficient manner.
</quotepara></quote><quotepara depth="2">
Doesn't Hibernate come with command line tools that allow you to do
that as well? I haven't played with Hibernate in a while, but I have
the impression that I have seen this somewhere.

</quotepara><quotepara depth="2">I am fairly new to iBatis as well, but I prefer it over Hibernate
because I use quite a lot of stored procedures, and I love to have the
freedom on modifying the SQL for tuning, etc...

</quotepara><quotepara depth="2">I have recently purchased the iBatis book and I am actually enjoying it.

</quotepara><quotepara depth="2">Fidel.

</quotepara></quote></quote><footer type="signature" hash="8870602484403822233" depth="0">-- 
<url>http://www.fastmail.fm</url> - Same, same, but different

</footer></body></message>