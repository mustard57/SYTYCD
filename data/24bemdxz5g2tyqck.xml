<message message-id="20040924125457.GO28317@certainkey.com" list="org.kernel.vger.linux-kernel" id="24bemdxz5g2tyqck" type="development" date="2004-09-24T08:54:57-04:00" year="2004-01-01" year-month="2004-09-01" year-month-day="2004-09-24" thread-id="knv3r7pnk3tcxv7t"><headers><envelope-from-line>From linux-kernel-owner+akpm=40zip.com.au-S268726AbUIXM5L@vger.kernel.org  Fri Sep 24 06:01:05 2004</envelope-from-line><from personal="Jean-Luc Cooke" address="jlcooke@certainkey.com">Jean-Luc Cooke &lt;jlcooke@certainkey.com&gt;</from><to personal="Theodore Ts'o" address="tytso@mit.edu">Theodore Ts'o &lt;tytso@mit.edu&gt;</to><subject normal="[PROPOSAL/PATCH] Fortuna PRNG in /dev/random">Re: [PROPOSAL/PATCH] Fortuna PRNG in /dev/random</subject><return-path>linux-kernel-owner+akpm=40zip.com.au-S268726AbUIXM5L@vger.kernel.org</return-path><received>from localhost (bix [127.0.0.1])
	by localhost.localdomain (8.12.10/8.12.10) with ESMTP id i8OD14Gg011619
	for &lt;akpm@localhost&gt;; Fri, 24 Sep 2004 06:01:05 -0700</received><received>from bix [127.0.0.1]
	by localhost with POP3 (fetchmail-6.2.0)
	for akpm@localhost (single-drop); Fri, 24 Sep 2004 06:01:05 -0700 (PDT)</received><received>by mangalore (mbox akpm)
 (with Cubic Circle's cucipop (v1.31 1998/05/13) Fri Sep 24 23:03:09 2004)</received><x-from_>linux-kernel-owner+akpm=40zip.com.au-S268726AbUIXM5L@vger.kernel.org  Fri Sep 24 22:59:56 2004</x-from_><received>from mailin2.pacific.net.au (mailin2.pacific.net.au [61.8.0.81])
	by mangalore.zipworld.com.au (8.12.3/8.12.3/Debian-6.6) with ESMTP id i8OCxu4N025709
	for &lt;akpm@zip.com.au&gt;; Fri, 24 Sep 2004 22:59:56 +1000</received><received>from vger.kernel.org (vger.kernel.org [12.107.209.244])
	by mailin2.pacific.net.au (8.12.3/8.12.3/Debian-6.6) with ESMTP id i8OCxqsl019958
	for &lt;akpm@zip.com.au&gt;; Fri, 24 Sep 2004 22:59:55 +1000</received><received>(majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S268726AbUIXM5L (ORCPT &lt;rfc822;akpm@zip.com.au&gt;);
	Fri, 24 Sep 2004 08:57:11 -0400</received><received>(majordomo@vger.kernel.org) by vger.kernel.org id S268729AbUIXM5K
	(ORCPT &lt;rfc822;linux-kernel-outgoing&gt;);
	Fri, 24 Sep 2004 08:57:10 -0400</received><received>from 104.engsoc.carleton.ca ([134.117.69.104]:14264 "EHLO
	certainkey.com") by vger.kernel.org with ESMTP id S268726AbUIXMz0
	(ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 24 Sep 2004 08:55:26 -0400</received><received>from jlcooke by certainkey.com with local (Exim 3.36 #1 (Debian))
	id 1CApbF-0003jI-00; Fri, 24 Sep 2004 08:54:57 -0400</received><date>Fri, 24 Sep 2004 08:54:57 -0400</date><message-id>20040924125457.GO28317@certainkey.com</message-id><references>&lt;20040923234340.GF28317@certainkey.com&gt; &lt;20040924043851.GA3611@thunk.org&gt;</references><mime-version>1.0</mime-version><content-type>text/plain; charset=us-ascii</content-type><content-disposition>inline</content-disposition><in-reply-to>&lt;20040924043851.GA3611@thunk.org&gt;</in-reply-to><user-agent>Mutt/1.5.6+20040722i</user-agent><sender>linux-kernel-owner@vger.kernel.org</sender><precedence>bulk</precedence><x-mailing-list>linux-kernel@vger.kernel.org</x-mailing-list><x-spam-checker-version>SpamAssassin 2.60 (1.212-2003-09-23-exp) on bix</x-spam-checker-version><x-spam-level/><x-spam-status>No, hits=-4.9 required=1.0 tests=BAYES_00 autolearn=ham 
	version=2.60</x-spam-status><status>RO</status><x-status/><x-keywords/><x-uid>7382</x-uid></headers><normalized-references><normalized-message-id>20040924125457.GO28317@certainkey.com</normalized-message-id><normalized-in-reply-to>20040924043851.GA3611@thunk.org</normalized-in-reply-to><normalized-reference>20040923234340.GF28317@certainkey.com</normalized-reference><normalized-reference>20040924043851.GA3611@thunk.org</normalized-reference></normalized-references><body type="text/plain; charset=us-ascii"><para depth="0">On Fri, Sep 24, 2004 at 12:38:51AM -0400, Theodore Ts'o wrote:
</para><quote depth="1"><quotepara depth="1">I've taken a quick look at your patch, and here are some problems with it.

</quotepara><quotepara depth="1">0.  Code style issues

</quotepara><quotepara depth="1">Take a look at /usr/src/linux/Documentation/CodingStyle, ...
</quotepara></quote><para depth="0">
Will-do.  My bad.

</para><quote depth="1"><quotepara depth="1">1.  Don't leave out-of-date comments behind.  

</quotepara><quotepara depth="1">Your patch makes significant changes, but you haven't updated the
comments to reflect all of your changes. ...
</quotepara></quote><para depth="0">
</para><quote depth="1"><quotepara depth="1">2.  The kernel will break if CONFIG_CRYPTO is false
matter what.  This was a design decision that was made long ago, to
simplify user space applications that could count on /dev/random ...
</quotepara></quote><para depth="0">
My naive point of view tells me either this design decision from days of
yore was not thought out properly (blasphemy!), or the cryptoapi needs to
be in kernel.

</para><para depth="0">A compromise would be to have a primitive PRNG in random.c is no
CONFIG_CRYRPTO is present to keep things working.

</para><quote depth="1"><quotepara depth="1">3.  The TCP sequence numbers are broken
</quotepara></quote><para depth="0">
I see.  I'll make the change.  Thank you.

</para><quote depth="1"><quotepara depth="1">As far as the Fortuna generator being "better", it really represents a
philosophical divide between what I call Crypto academics" and "Crypto
engineers".  I won't go into that whole debate here, except to note
that the current /dev/random was designed with close consultation with
Colin Plumb, who wrote the random number generator found in PGP, and
indeed /dev/random is very close to that used in PGP.  In discussions
on sci.crypt, there were those who argued on both side of this issue,
with such notables as Peter Gutmann lining up against Jean-Luc.
</quotepara></quote><para depth="0">
Agreed.  This is why I've been dreading in posting the patch here.  The
current /dev/random is good, possibly the best OS-level RNG out there
right now.  Ted, if I've never said it before or ever again, you've done
a great job.  But my first impressions when I dove in were:
 - gah!  Why did someone go through so much trouble to make this hard to
   analyse?
 - humm, why not use the cryptoapi if we want random data?
 - why do linux users want information secure random numbers?  Wouldn't
   crypto-secure random numbers be what they really want?
  + this, I've learned, is not something you can argue well against.  It's
    a matter of taste ... like Brittany Spears.

</para><para depth="0">I wanted something more structured running on my machines so I re-wrote
random.c to use Fortuna, no entropy estimators, and uses the cryptoapi.

</para><para depth="0">For the record, I believe David Wagner saw the case for replacing the PRNG
with Fortuna holding water.  Even removing the entropy estimator.  But
coneeded that some people will want /dev/random to block, so let them eat
cake.

</para><quote depth="1"><quote depth="2"><quotepara depth="2">  + Removed entropy estimation
   - Fortuna doesn't need it, vanilla-/dev/random and other Yarrow-like
     PRNGs do to survive state compromise and other attacks.
</quotepara></quote><quotepara depth="1">
Entropy estimation is a useful concept in that it attempts to limit
possible attacks caused by weaknesses in the crypto algorithms (such
what happened at this year's Crypto's conference, where MD4, MD5,
HAVAL, and SHA-0 were all weakened).  The designed used by PGP and
/dev/random both limit the amount of reliance placed in the crypto
algorithms, where as Fortuna and Yarrow both assume that crypto
primitives are 100% strong.  This is again a philosophical divide;
given that we have access to unpredicitability based on hardware
timings, we should limit the dependence on crypto algorithsm and to
design a system that is closer to "true randomness" as possible.  
</quotepara></quote><para depth="0">
What if I told the SHA-1 implementation in random.c right now is weaker
than those hashs in terms of collisions?  The lack of padding in the
implementation is the cause.  HASH("a\0\0\0\0...") == HASH("a") There
are billions of other examples.

</para><para depth="0">The academic vs. engineer analogy works the other way as well.  Fortuna's
security can be directly reduced to the security of the underlying
algorithms.  This is a good thing.  If the security of all applications
were reduced in the same way, the world would be a safer place (political
discussions not withstanding).

</para><para depth="0">Vanilla random.c depends on SHA-1 be to be resistant to 1-st pre-image
attacks.  Fortuna depends on this as well with SHA-256 (or whatever
other hash you put in there).  The "folding over with XOR" method you
use to make random.c stronger can work against you as well.  It comes
down to "I've changed SHA-1 to make it stronger".  The logic question
becomes: "Then why doesn't everyone use it?"

</para><para depth="0">JLC
-
To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
the body of a message to <email>majordomo@vger.kernel.org</email>
More majordomo info at  <url>http://vger.kernel.org/majordomo-info.html</url>
Please read the FAQ at  <url>http://www.tux.org/lkml/</url>

</para></body></message>