<message message-id="4.2.0.58.J.20040829160538.04f78a98@localhost" list="org.w3.uri" id="24brmh4u3aqn5x5s" type="general" date="2004-08-30T18:17:57+09:00" year="2004-01-01" year-month="2004-08-01" year-month-day="2004-08-30" thread-id="24brmh4u3aqn5x5s"><headers><envelope-from-line>From duerst@w3.org Mon Aug 30 09:18:34 2004</envelope-from-line><from personal="Martin Duerst" address="duerst@w3.org">Martin Duerst &lt;duerst@w3.org&gt;</from><to personal="Tim Kindberg" address="timothy@hpl.hp.com">Tim Kindberg &lt;timothy@hpl.hp.com&gt;</to><cc personal="uri@w3.org" address="uri@w3.org">uri@w3.org</cc><subject normal="draft-kindberg-tag-uri">draft-kindberg-tag-uri</subject><received>from bart.w3.org ([128.30.52.40])
	by frink.w3.org with esmtp (Exim 4.34)
	id 1C1iJ8-0005hP-Ch
	for uri@listhub.w3.org; Mon, 30 Aug 2004 09:18:34 +0000</received><received>from homer.w3.org ([128.30.52.30])
	by bart.w3.org with esmtp (Exim 4.34)
	id 1C1iJ8-0008Gg-82; Mon, 30 Aug 2004 09:18:34 +0000</received><received>from EBOSHIIWA (homer.w3.org [128.30.52.30])
	by homer.w3.org (Postfix) with ESMTP id 602D84EFC5;
	Mon, 30 Aug 2004 05:18:31 -0400 (EDT)</received><message-id>4.2.0.58.J.20040829160538.04f78a98@localhost</message-id><x-sender>duerst@localhost</x-sender><x-mailer>QUALCOMM Windows Eudora Pro Version 4.2.0.58.J </x-mailer><date>Mon, 30 Aug 2004 18:17:57 +0900</date><in-reply-to>&lt;4.2.0.58.J.20040824132730.00b773f8@localhost&gt;</in-reply-to><mime-version>1.0</mime-version><content-type>text/plain; charset="us-ascii"; format=flowed</content-type><received-spf>pass (bart.w3.org: domain of duerst@w3.org designates 128.30.52.30 as permitted sender)</received-spf><x-original-to>uri@w3.org</x-original-to><x-archived-at>http://www.w3.org/mid/4.2.0.58.J.20040829160538.04f78a98@localhost</x-archived-at></headers><normalized-references><normalized-message-id>4.2.0.58.J.20040829160538.04f78a98@localhost</normalized-message-id><normalized-in-reply-to>4.2.0.58.J.20040824132730.00b773f8@localhost</normalized-in-reply-to></normalized-references><body type="text/plain; charset=&quot;us-ascii&quot;; format=flowed"><para depth="0">
Hello Tim,

</para><para depth="0">Finally I get around to comment on the newest version of your TAG draft,
a pre-draft at <url>http://taguri.org/06/draft-kindberg-tag-uri-06.txt</url>.

</para><para depth="0">The main comment is that you try to have two separate definitions,
one for TAG URIs and the other for TAG IRIs, but that isn't how the
URI spec and the IRI spec work. For further background, please also
see the issue and discussion at
<url>http://www.w3.org/International/iri-edit#iri-scheme-38</url>

</para><para depth="0">I also give some comments on general issues that I found, mostly
editorial.

</para><para depth="0">At 13:27 04/08/24 +0900, Martin Duerst wrote:
</para><quote depth="1"><quotepara depth="1">Network Working Group                                        T. Kindberg
Internet-Draft                               Hewlett-Packard Corporation
Expires: January 27, 2005                                       S. Hawke
                                               World Wide Web Consortium
                                                           July 29, 2004

</quotepara><quotepara depth="1">                          The 'tag' URI scheme
                       draft-kindberg-tag-uri-06
</quotepara></quote><para depth="0">
[snip] [also snipped all page breaks]

</para><quote depth="1"><quotepara depth="1">Abstract

</quotepara><quotepara depth="1">   This document describes the "tag" Uniform Resource Identifier (URI)
   scheme,
</quotepara></quote><para depth="0">
This comma is somewhat confusing. It's probably best to end the sentence
here and integrate the points in the remaining clause into the rest of
the paragraph.

</para><quote depth="1"><quotepara depth="1">for identifiers that are unique across space and time.  Tag
   URIs (also known as "tags") are distinct from most other URIs in that
   there is no authoritative resolution mechanism.  A tag may be used
   purely as an entity identifier.  Unlike UUIDs or GUIDs
</quotepara></quote><para depth="0">
Abbreviations shouldn't appear without expansion. (see RFC guidelines)
Also, there should be references for these terms, but referencing
doesn't fit well into an abstract. I'd concentrate on the description
of tags themselves in the abstract, in positive terms (what tags do,
not what they don't), and put comparision with other schemes into a
section in the body of the document, with references.

</para><quote depth="1"><quotepara depth="1">such as "uuid"
</quotepara></quote><para depth="0">
So the uuid scheme is an UUID? Or a GUID? Or both? Some readers
will be confused by such minor term differences without clear
explanation.

</para><quote depth="1"><quotepara depth="1">   URIs and "urn:oid" URIs, tags are designed to be tractable to humans.

</quotepara><quotepara depth="1">   Furthermore, using tags has some advantages over the common practice
   of using "http" URIs as identifiers for non-HTTP-accessible
   resources.
</quotepara></quote><para depth="0">
[snip]

</para><quote depth="1"><quotepara depth="1">1.  Introduction

</quotepara><quotepara depth="1">   A tag is a type of Uniform Resource Identifier (URI) [1] designed to
   meet the following requirements:

</quotepara><quotepara depth="1">   1.  Identifiers are likely to be unique across space and time,
</quotepara></quote><para depth="0">
How likely? Very likely? Designed to make it easy to be?

</para><quote depth="1"><quotepara depth="1">and
       come from a practically inexhaustible supply.
   2.  Identifiers are relatively convenient for humans to mint
       (create), read, type, remember etc.
   3.  No registration is necessary,
</quotepara></quote><para depth="0">
-&gt; no central registration is necessary

</para><quote depth="1"><quotepara depth="1">at least for holders of domain
       names or email addresses;
</quotepara></quote><para depth="0">
I think that each such holder who creates tags has to keep their
own registry to avoid local conflicts. The draft should be quite
a bit more explicit about this.

</para><quote depth="1"><quotepara depth="1">and there is negligible cost to mint
       each new identifier.
   4.  The identifiers are independent of any particular resolution
       scheme.

</quotepara><quotepara depth="1">   For example, the above requirements may apply in the case of a user
   who wants to place identifiers on their documents:
</quotepara></quote><para depth="0">
These are the requirements met by tags, yes? It'd be better
to just say so.

</para><quote depth="1"><quotepara depth="1">   a.  They
</quotepara></quote><para depth="0">
Who? The documents? The identifiers? The users? Please rework the
whole list so that all the items follow the same syntactic structure.

</para><quote depth="1"><quotepara depth="1">want to be reasonably sure that the identifier is unique.
       Global uniqueness is valuable because it prevents identifiers
       from becoming unintentionally ambiguous.
   b.  It is useful for the identifier to be tractable to humans:
</quotepara></quote><para depth="0">
'to humans' -&gt; 'by humans'?

</para><quote depth="1"><quotepara depth="1">they
       should be able to mint new identifiers conveniently, and to type
       them into emails and forms.
</quotepara></quote><para depth="0">
For more aspects of this (memorize,...), see the 'overview and motivation'
section of IRIs.

</para><quote depth="1"><quotepara depth="1">   c.  They do not want to have to communicate with anyone else in order
       to mint identifiers for their documents.
   d.  The user wants to avoid identifiers that might be taken to imply
       the existence of an electronic resource accessible via a default
       resolution mechanism, when no such electronic resource exists.

</quotepara><quotepara depth="1">   Existing identification schemes satisfy some but not all of the
   general requirements above.
</quotepara></quote><para depth="0">
Why 'general'? I read it as if these requirements would always apply.

</para><quote depth="1"><quotepara depth="1">For example:

</quotepara><quotepara depth="1">   UUIDs [8], [9] are hard for humans to read.

</quotepara><quotepara depth="1">   OIDs [10], [11] and Digital Object Identifiers [12] require naming
   authorities to register themselves,
</quotepara></quote><para depth="0">
'themselves': If the identifiers register themselves, that would be
great. But the problem is that registration requires work by
an user.

</para><quote depth="1"><quotepara depth="1">even if they already hold a
   domain name registration.
</quotepara></quote><para depth="0">
So 'they' is users, not ids? But users don't register themselves,
they register some ids or schemes,...

</para><quote depth="1"><quotepara depth="1">   URLs (in particular, "http" URLs) are sometimes used as identifiers
   that satisfy most of our requirements.
</quotepara></quote><para depth="0">
'our': Who is 'we'? Better avoid.

</para><quote depth="1"><quotepara depth="1">Many users and organisations
   have already registered a domain name, and the use of the domain name
   to mint identifiers comes at no additional cost.  But there are
   drawbacks to URLs-as-identifiers:

</quotepara><quotepara depth="1">   o  An attempt may be made to resolve a URL-as-identifier, even though
      there is no resource accessible at the "location".
   o  Domain names change hands and the new assignee of a domain name
      can't be sure that they are minting new names.  For example, if
      example.org is assigned first to a user Smith and then to a user
      Jones, there is no systematic way for Jones to tell whether Smith
      has already used a particular identifier such as http://
      example.org/9999.
   o  Entities could rely on purl.org
</quotepara></quote><para depth="0">
add: or a similar service.
Also, use '<url>http://purl.org</url>' rather than just 'purl.org', or provide
a reference.

</para><quote depth="1"><quotepara depth="1">as a (first-come, first-served)
      assigner of unique URIs; but a solution without reliance upon
      another entity such as the Online Computer Library Center (OCLC,
      which runs purl.org) may be preferable.

</quotepara><quotepara depth="1">   Lastly, many entities -- especially individuals -- are assignees of
   email addresses but not domain names.  It would be preferable to
   enable those entities to mint unique identifiers.

</quotepara><quotepara depth="1">2.  Tag Syntax and Rules

</quotepara><quotepara depth="1">   This section first specifies the syntax of tag URIs and gives
   examples.  It then describes a set of rules for minting tags designed
   to make them unique.  Finally, it discusses the resolution and
   comparison of tags.

</quotepara><quotepara depth="1">2.1  Tag Syntax and Examples

</quotepara><quotepara depth="1">   The general syntax of a tag URI, in ABNF, is:
</quotepara></quote><para depth="0">
You need a reference to the ABNF RFC
(<url>http://www.ietf.org/rfc/rfc2234.txt</url>),
and to check the ABNF with some tool
(see advice to Internet Draft and RFC authors).

</para><quote depth="1"><quotepara depth="1">      tagURI        = "tag:" taggingEntity ":" [specific]
</quotepara></quote><para depth="0">
Is it possible for 'specific' to be empty? In that case,
is the ':' necessary? Is there any specific meaning for
this case? If this is allowed, please provide an example.
Also, later, 'specific' is defined as *(...),
so the [] parentheses are not at all necessary.

</para><quote depth="1"><quotepara depth="1">   Where:

</quotepara><quotepara depth="1">      taggingEntity = authorityName "," date
      authorityName = DNSname / emailAddress
      date          = 4dig ["-" 2dig ["-" 2dig ]] ; see ISO8601 [2]
</quotepara></quote><para depth="0">
It would be much clearer if this were:
        date          = year ["-" month ["-" day ]] ; see ISO8601 [2]
and then
        year          = 4*DIGIT
        month         = "01" / "02" / "03" / ...
        day           = ("0" %x31-39) / (("1" / "2") DIGIT) / "30" / "31"
or some such. This easily catches a lot of illegal stuff, and makes
the semantics much more obvious.

</para><quote depth="1"><quotepara depth="1">      DNSname       = DNScomp / DNSname "." DNScomp  ; see RFC1035 [3]
</quotepara></quote><para depth="0">
It's much better to write this rule in a non-recursive fashion:

</para><para depth="0">        DNSname       = DNScomp *( "." DNScomp )

</para><para depth="0">And you better don't cite RFC 1035 directly.

</para><quote depth="1"><quotepara depth="1">      DNScomp       = alphaNum [*(alphaNum /"-") alphaNum]
</quotepara></quote><para depth="0">
To allow Internationalized Domain Names, you have to add
pct-encoded here:

</para><para depth="0">        DNScomp       = dnsChar [*(dnsChar / "-") dnsChar]
        dnsChar       = alphaNum / pct-encoded

</para><quote depth="1"><quotepara depth="1">      emailAddress  = 1*(alphaNum /"-"/"."/"_") "@" DNSname
</quotepara></quote><para depth="0">
I'd strongly recommend to also add pct-encoded here, making this
future-proof for potential internationalization of the LHS:

</para><para depth="0">        emailAddress  = 1*(alphaNum /"-"/"."/"_"/pct-encoded) "@" DNSname

</para><quote depth="1"><quotepara depth="1">      alphaNum      = DIGIT / ALPHA
      specific      = *( pchar / "/" / "?" ) ; pchar from RFCXXXX [1]
</quotepara></quote><para depth="0">
pchar includes pct-encoded, so this is okay in terms of basic syntax.

</para><quote depth="1"><quotepara depth="1">      ALPHA         = %x41-5A / %x61-7A ; any char in the range "A"-"Z"
      or "a"-"z"
      DIGIT         = %x30-39 ; any char in the range "0" through "9"
</quotepara></quote><para depth="0">
Just import ALPHA and DIGIT from the ABNF RFC, don't repeat them here.

</para><para depth="0">At this point, you should say some general things about pct-encoded.
What you want to say probably is:
- pct-encoded (including in the case of pchar) is only allowed for
   octets above %7F.
- pct-encoded (including in the case of pchar) is only allowed in
   sequences that are valid UTF-8 octet sequences.
- pct-encoded is used to encode characters using UTF-8.
- There may be additional restrictions for each of the components
   allowing pct-encoded.
- That pct-encoded is only allowed to allow the minting of tag IRIs,
   but that tags created as URIs from the start should/must never
   contain any pct-encoded pieces, and that tag IRIs also should/must
   never contain any pct-encoded pieces.

</para><quote depth="1"><quotepara depth="1">   The component "taggingEntity" is the name space part of the URI.  To
   avoid ambiguity, the domain name in "authorityName" (whether an email
   address or a simple domain name) MUST be fully qualified.  It is
   RECOMMENDED that the domain name should be in lowercase form.
   Alternative formulations of the same authority name will be counted
   as distinct
</quotepara></quote><para depth="0">
'counted' -&gt; 'treated', or even better just say that these *are*
different tags.

</para><quote depth="1"><quotepara depth="1">and hence tags containing them will be unequal (see
   Section 2.4).  For example, tags beginning "tag:HP.com,2000:" are
   never equal to those beginning "tag:hp.com,2000:", even though they
   refer to the same domain name.

</quotepara><quotepara depth="1">   Authority names could, in principle, belong to any syntactically
   distinct namespaces whose names are assigned to a unique entity at a
   time.  Those include, for example, certain IP addresses, certain MAC
   addresses, and telephone numbers.  However, to simplify the tag
   scheme, we restrict authority names to be domain names and email
   addresses.  Future standards efforts may allow use of other authority
   names following syntax that is disjoint from this syntax.  To allow
   for such developments, software that processes tags MUST NOT reject
   them on the grounds that they are outside the syntax for
   authorityName defined above.
</quotepara></quote><para depth="0">
Here, say that a DNSName must, after decoding of percent-encoding and
interpretation of the resulting octet sequence as UTF-8,
be an Internationalized Domain Name according to IDNA [RFC 3490].
You may also want to say that a DNSName, after decoding of
percent-encoding and interpretation of the resulting octet sequence
as UTF-8, should be normalized as defined by Nameprep [RFC 3491] to
avoid producing TAGs that look very similar but are not the same.

</para><para depth="0">Also, say that pct-encoded is allowed on the left hand side of
emailAddress (before the "@") for future-compatibility, and is only
to be used if and when there is an IETF Standards-Track document
specifying how internationalized email address left hand sides
are handled.

</para><quote depth="1"><quotepara depth="1">   The component "specific" is the name-space-specific part of the URI:
   it is a string of URI characters (see restrictions in syntax
   specification) chosen by the minter of the URI.  It is RECOMMENDED
   that specific identifiers should be human-friendly.
</quotepara></quote><para depth="0">
Add some text here that after decoding of percent-encoding and
interpretation of the resulting octet sequence as UTF-8,
"specific" should be in NFC and preferably even in NFKC.

</para><quote depth="1"><quotepara depth="1">   Examples of tag URIs are:

</quotepara><quotepara depth="1">      tag:<email>timothy@hpl.hp.com</email>,2001:web/externalHome
      tag:<email>sandro@w3.org</email>,2004-05:Sandro
      tag:my-ids.com,2001-09-15:TimKindberg:presentations:UBath2004-05-19
      tag:blogger.com,1999:blog-555
      tag:yaml.org,2002:int
</quotepara></quote><para depth="0">
An example without 'specific', and some I18N examples, should be added
(I can help).

</para><quote depth="1"><quotepara depth="1">2.2  Rules for Minting Tags

</quotepara><quotepara depth="1">   As Section 2.1 has specified, each tag consists of a "tagging entity"
   followed, optionally, by a specific identifier.  The tagging entity
   is designated by an "authority name" -- a fully qualified domain name
   or an email address containing a fully qualified domain name --
   followed by a date.  The date is chosen to make the tagging entity
   globally unique, exploiting the fact that domain names and email
   addresses are assigned to at most one entity at a time.  That entity
   then ensures that it mints unique identifiers.
</quotepara></quote><para depth="0">
The following paragraph can be reworded (and probably simplified)
once the chances to the syntax rules have been made.

</para><quote depth="1"><quotepara depth="1">   The date specifies, according to the Gregorian calendar and UTC, any
   particular day on which the authority name was assigned to the
   tagging entity at 00:00 UTC (the start of the day).  The date MAY be
   a past or present date on which the authority name was assigned at
   that moment.  The date is specified using one of the "YYYY",
   "YYYY-MM" and "YYYY-MM-DD" formats allowed by the ISO 8601 standard
   [2].  The tag specification permits no other formats.  Tagging
   entities MUST ascertain the date with sufficient accuracy
   to avoid accidentally using a date on which the authority name was
   not in fact assigned (many computers and mobile devices have poorly
   synchronised clocks).  The date MUST be reckoned from UTC -- which
   may differ from the date in the tagging entity's local timezone at
   00:00 UTC.
</quotepara></quote><para depth="0">
I think some readers may be confused by "reckoned from UTC". Why not
just say that the date is always in UTC?

</para><quote depth="1"><quotepara depth="1">That distinction can generally be safely ignored in
   practice, but not on the day of the authority name's assignment.  In
   principle it would otherwise be possible on that day for the previous
   assignee and the new assignee to use the same date and thus mint the
   same tags.

</quotepara><quotepara depth="1">   In the interests of brevity, the month and day default to 01.  A day
   value of 01 MAY be omitted; a month value of 01 MAY be omitted unless
   it is followed by a day value other than 01.
</quotepara></quote><para depth="0">
I'd quote all the 01 (i.e. "01") for easier readability. It is easy here
to confuse MAY with the month of May.

</para><quote depth="1"><quotepara depth="1">For example, "2001-07"
   is the date 2001-07-01 and "2000" is the date 2000-01-01.  All date
   formulations specify a moment (00:00 UTC) of a single day, and not a
   period of a day or more such as "the whole of July 2001" or "the
   whole of 2000".  Assignment at that moment is all that is required to
   use a given date formulation.
</quotepara></quote><para depth="0">
formulation -&gt; format? or just 'use a given date'?

</para><quote depth="1"><quotepara depth="1">   Tagging entities should be aware that alternative formulations of the
   same date will be counted as distinct and hence tags containing them
   will be unequal.  For example, tags beginning "tag:hp.com,2000:" are
   never equal to those beginning "tag:hp.com,2000-01-01:", even though
   they refer to the same date (see Section 2.4).
</quotepara></quote><para depth="0">
Here and elsewhere: The IETF prefers to use domain names such as
example.com.

</para><quote depth="1"><quotepara depth="1">   An entity MUST NOT mint tags under an authority name that was
   assigned to a different entity at 00:00 UTC on the given date, and it
   MUST NOT mint tags under a future date.

</quotepara><quotepara depth="1">   An entity that acquires an authority name immediately after a period
   during which the name was unassigned MAY mint tags as if the entity
   was assigned the name during the unassigned period.  This practice
   has considerable potential for error and MUST NOT be used unless the
   entity has substantial evidence that the name was unassigned during
   that period.  The authors are currently unaware of any mechanism that
   would count as evidence, other than daily polling of the "whois"
   registry.

</quotepara><quotepara depth="1">   For example, Hewlett-Packard holds the domain registration for hp.com
   and may mint any tags rooted at that name with a current or past date
   when it held the registration.  It must not mint tags such as
   "tag:champignon.net,2001:" under domain names not registered to it.
   It must not mint tags dated in the future, such as
   "tag:hp.com,2999:".  If it obtains assignment of
   "extremelyunlikelytobeassigned.org" on 2001-05-01, then it must not
   mint tags under "extremelyunlikelytobeassigned.org,2001-04-01" unless
   it has evidence proving that that name was continuously unassigned
   between 2001-04-01 and 2001-05-01.

</quotepara><quotepara depth="1">   A tagging entity mints specific identifiers that are unique within
   its context, in accordance with any internal scheme that uses only
   URI characters.  Some tagging entities (e.g.  corporations, mailing
   lists) consist of many people, in which case group decision-making
   and record-keeping procedures SHOULD be used to achieve uniqueness.
</quotepara></quote><para depth="0">
Record-keeping is important for individuals, too.

</para><quote depth="1"><quotepara depth="1">2.3  Resolution of Tags

</quotepara><quotepara depth="1">   There is no authoritative resolution mechanism for tags.  Unlike most
   other URIs, tags can only be used as identifiers, and are not
   designed to support resolution.  If authoritative resolution is a
   desired feature, a different URI scheme should be used.

</quotepara><quotepara depth="1">2.4  Equality of Tags

</quotepara><quotepara depth="1">   Tags are simply strings of characters and are considered equal if and
   only if they are completely indistinguishable in their machine
   representations.  That is, one can compare tags for equality by
   comparing the numeric codes of their characters, in sequence, for
   numeric equality.  This equality-criterion allows for simplification
</quotepara></quote><para depth="0">
equality-criterion -&gt; equality criterion

</para><quote depth="1"><quotepara depth="1">   of tag-handling software, which does not have to transform tags in
   any way to compare them.
</quotepara></quote><para depth="0">
</para><quote depth="1"><quotepara depth="1">3.  Internationalisation

</quotepara><quotepara depth="1">   So far, we have considered tags as URIs, which are represented in a
   subset of US-ASCII characters.  As befits our requirement for
   identifiers to be tractable to humans, tags can also be minted as
</quotepara></quote><para depth="0">
The 'can also be minted as' probably needs some more explanation.
In general, any uri scheme that allows pct-encoded in the right way can
also be used with IRIs. See below.

</para><quote depth="1"><quotepara depth="1">   Internationalized Resource Identifiers (IRIs) [4].  That is, they can
   be minted in languages that use any characters from the Universal
   Character Set.
</quotepara></quote><para depth="0">
Does a tag have a language? I think it's better to just say:
they can be minted using any characters from ...

</para><para depth="0">The following procedure can probably be removed. If not, the following
details should be fixed:

</para><quote depth="1"><quotepara depth="1">   The procedure for minting tags as IRIs is to use the specification of
   Section 2 but with the following syntactic changes:
   o  An International Domain Name (IDN) [5] represented according to
      the rules of 'nameprep' [6] may be used in place of a domain name
      in authorityName.  That includes a domain name appearing on the
      right-hand side of an email address.
   o  If a standard arises for expressing email addresses in
      international form -- that is, including the left-hand side of
      email addresses -- then that form will be allowed in
      authorityName.
   o  An international authorityName MUST appear in at least Normalized
      Form C (NFC) and SHOULD appear in Normalized Form KC (NFKC) [7].
</quotepara></quote><para depth="0">
This should not be necessary, because Nameprep takes care of this.
But it may be a good thing to say for 'specific'.

</para><quote depth="1"><quotepara depth="1">   o  The specific component of a tag IRI may be any string allowed by
      the ABNF term *( ipchar / "/" / "?" ) defined in [4].
</quotepara></quote><para depth="0">
I recommend adding some normalization restrictions here, for the benefit
of transcribability,...

</para><quote depth="1"><quotepara depth="1">   Two tag IRIs are equal if and only if they are identical as character
   sequences -- and thus that their machine representations are
   identical when using the same character encodings.
</quotepara></quote><para depth="0">
It may be a good idea to repeat here explicitly that:
- The use of pct-encoding in the syntax rules is only allowed in
   order to define the syntax of IRIs allowed in the tag scheme.
- pct-encoding should not be used in tags generated using only
   US-ASCII characters.
- pct-encoding should not be used in tags generated including
   non-ASCII characters (i.e. IRIs).
- A tag IRI is not equivalent to the tag URI resulting after
   mapping the IRI to an URI according to Section 3.1 of [IRI].
   To reduce any problems resulting from this:
   - tags should be used mainly with technology that can transport and
     handle IRIs (such as RDF).
   - If tags are temporarily converted to URIs because they have
     to be passed to some infrastructure that isn't able to handle
     IRIs, they should be converted back to IRIs when being recived
     back from that infrastructure.

</para><quote depth="1"><quotepara depth="1">4.  Security Considerations

</quotepara><quotepara depth="1">   Minting a tag, by itself, is an operation internal to the tagging
   entity with no external consequences.  The consequences of using an
   improperly minted tag (due to malice or error) in an application
   depends on the application, and must be considered in the design of
   any application that uses tags.

</quotepara><quotepara depth="1">   There is a significant possibility of minting errors by people who
   fail to apply the rules governing dates, or who use a shared
   (organizational) authority-name without prior organization-wide
   agreement.  Tag-aware software MAY help catch and warn against these
   errors.  As stated in Section 2, however, to allow for future
   expansion, software MUST NOT reject tags which do not conform to the
   syntax specified in Section 2.

</quotepara><quotepara depth="1">   A malicious party could make it appear that the same domain name or
   email address was assigned to each of two or more entities.  Tagging
   entities SHOULD use reputable assigning authorities, and verify
   assignment wherever possible.

</quotepara><quotepara depth="1">   Entities SHOULD also avoid the potential for malicious exploitation
   of clock skew, by using authority names that were assigned
   continuously from well before to well after 00:00 UTC on the date
   chosen for the tagging entity -- preferably by intervals in the order
   of days.

</quotepara><quotepara depth="1">5.  References

</quotepara><quotepara depth="1">5.1  Normative References

</quotepara><quotepara depth="1">   [1]  Berners-Lee, T., Fielding, R. and L. Masinter, "Uniform Resource
        Identifier (URI): Generic Syntax (Note to the RFC Editor: Please
        update this reference with the RFC resulting from
        draft-fielding-uri-rfc2396bis-xx.txt, and remove this Note)",
        draft-fielding-uri-rfc2396bis-06 (work in progress), July 2004.

</quotepara><quotepara depth="1">   [2]  "Data elements and interchange formats -- Information
        interchange -- Representation of dates and   times", ISO
        (International Organization for Standardization) ISO 8601:1988,
        1988.

</quotepara><quotepara depth="1">   [3]  Mockapetris, P., "Domain names - implementation and
        specification", STD 13, RFC 1035, November 1987.

</quotepara><quotepara depth="1">   [4]  Duerst, M. and M. Suignard, "Internationalized Resource
        Identifiers (IRIs)", draft-duerst-iri-09 (work in progress),
        July 2004.
</quotepara></quote><para depth="0">
      This should have a similar RFC Editor comment as [1].

</para><quote depth="1"><quotepara depth="1">   [5]  Faltstrom, P., Hoffman, P. and A. Costello, "Internationalizing
        Domain Names in Applications (IDNA)", RFC 3490, March 2003.

</quotepara><quotepara depth="1">   [6]  Hoffman, P. and M. Blanchet, "Nameprep: A Stringprep Profile for
        Internationalized Domain Names (IDN)", RFC 3491, March 2003.

</quotepara><quotepara depth="1">   [7]  Duerst, M. and M. Davis, "Unicode Normalization Forms", Unicode
        Standard Annex #15 <url>http://www.unicode.org/unicode/reports/tr15/</url>
        tr15-23.html, April 2003.

</quotepara><quotepara depth="1">5.2  Informative References

</quotepara><quotepara depth="1">   [8]   Leach, P. and R. Salz, "UUIDs and GUIDs", draft-leach-uuids-01
         (work in progress), 1997.

</quotepara><quotepara depth="1">   [9]   "Information technology - Open Systems Interconnection - Remote
         Procedure Call (RPC)", ISO (International Organization for
         Standardization) ISO/IEC 11578:1996, 1996.

</quotepara><quotepara depth="1">   [10]  "Specification of abstract syntax notation one (ASN.1)", ITU-T
         recommendation X.208,  (see also RFC 1778), 1988.

</quotepara><quotepara depth="1">   [11]  Mealling, M., "A URN Namespace of Object Identifiers", RFC
         3061, February 2001.

</quotepara><quotepara depth="1">   [12]  Paskin, N., "Information Identifiers", Learned Publishing Vol.
         10, No. 2, pp. 135-156,  (see also www.doi.org), April 1997.
</quotepara></quote><para depth="0">
[snip]

</para><para depth="0">Regards,    Martin.

</para></body></message>