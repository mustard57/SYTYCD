<message message-id="0919C693-2BE6-438C-9090-B6A92F7D9DEE@dc.uba.ar" list="org.haskell.haskell-cafe" id="24cj7nfq3cagsfmq" type="general" date="2009-11-10T22:42:21-03:00" year="2009-01-01" year-month="2009-11-01" year-month-day="2009-11-10" thread-id="vscs32lq6mmc5nzr"><headers><envelope-from-line>Tue Nov 10 17:42:44 2009</envelope-from-line><from personal="Daniel Gorín" address="dgorin@dc.uba.ar">"Daniel Gorín" &lt;dgorin@dc.uba.ar&gt;</from><to personal="martin.hofmann@uni-bamberg.de" address="martin.hofmann@uni-bamberg.de">martin.hofmann@uni-bamberg.de</to><cc personal="haskell-cafe" address="haskell-cafe@haskell.org">haskell-cafe &lt;haskell-cafe@haskell.org&gt;</cc><subject normal="[Haskell-cafe] Problems with Language.Haskell.Interpreter and errors">Re: [Haskell-cafe] Problems with Language.Haskell.Interpreter and errors</subject><received>from srv-117c-be06.markmail.marklogic.com ([172.19.8.46])
          by mail-1.a.markmail.int (JAMES SMTP Server 2.3.1) with SMTP ID 402
          for &lt;romeo.kirkland.clemons@a.markmail.org&gt;;
          Tue, 10 Nov 2009 17:42:44 -0800 (GMT-08:00)</received><received>from www.haskell.org (slb-117n.markmail.marklogic.com [172.19.8.33])
	by mgw-1.public.markmail.int (Postfix) with ESMTP id A5CA129081C6
	for &lt;romeo.kirkland.clemons@a.markmail.org&gt;; Tue, 10 Nov 2009 17:42:20 -0800 (PST)</received><received>from haskell.cs.yale.edu (localhost.localdomain [127.0.0.1])
	by www.haskell.org (Postfix) with ESMTP
	id 7FA403242BB; Tue, 10 Nov 2009 20:18:22 -0500 (EST)</received><x-original-to>haskell-cafe@haskell.org</x-original-to><delivered-to>haskell-cafe@haskell.org</delivered-to><received>from smtp-2.dc.uba.ar (smtp-2.dc.uba.ar [157.92.27.62])
	by www.haskell.org (Postfix) with ESMTP id 464B43242BB
	for &lt;haskell-cafe@haskell.org&gt;; Tue, 10 Nov 2009 20:18:17 -0500 (EST)</received><received>(qmail 27479 invoked by uid 111); 11 Nov 2009 01:42:30 -0000</received><received>from 186.136.176.170 by athila-2 (envelope-from &lt;dgorin@dc.uba.ar&gt;,
	uid 1002) with qmail-scanner-1.25 (spamassassin: 3.0.4.  
	Clear:RC:0(186.136.176.170):SA:0(-1.4/3.5):. 
	Processed in 7.357454 secs); 11 Nov 2009 01:42:30 -0000</received><x-spam-checker-version>SpamAssassin 3.1.7-deb3 (2006-10-05) on athila-2</x-spam-checker-version><x-spam-level/><x-spam-status>No, score=-1.4 required=3.5 tests=ALL_TRUSTED autolearn=no 
	version=3.1.7-deb3</x-spam-status><x-envelope-from>dgorin@dc.uba.ar</x-envelope-from><received>from unknown (HELO [192.168.1.7]) (dgorin@[186.136.176.170])
	(envelope-sender &lt;dgorin@dc.uba.ar&gt;)
	by smtp-2.dc.uba.ar (qmail-ldap-1.03) with AES128-SHA encrypted SMTP
	for &lt;haskell-cafe@haskell.org&gt;; 11 Nov 2009 01:42:23 -0000</received><message-id>0919C693-2BE6-438C-9090-B6A92F7D9DEE@dc.uba.ar</message-id><in-reply-to>&lt;1254291628.6704.2.camel@ios.cogsys.wiai.uni-bamberg.de&gt;</in-reply-to><content-type>text/plain; charset=US-ASCII; format=flowed; delsp=yes</content-type><content-transfer-encoding>7bit</content-transfer-encoding><mime-version>1.0 (Apple Message framework v936)</mime-version><date>Tue, 10 Nov 2009 22:42:21 -0300</date><references>&lt;1254225392.6118.80.camel@ios.cogsys.wiai.uni-bamberg.de&gt;
	&lt;799D986A-33A8-4C4F-B1AB-01C650EA1094@dc.uba.ar&gt;
	&lt;1254291628.6704.2.camel@ios.cogsys.wiai.uni-bamberg.de&gt;</references><x-mailer>Apple Mail (2.936)</x-mailer><x-beenthere>haskell-cafe@haskell.org</x-beenthere><x-mailman-version>2.1.5</x-mailman-version><precedence>list</precedence><list-id>The Haskell Cafe &lt;haskell-cafe.haskell.org&gt;</list-id><list-unsubscribe>&lt;http://www.haskell.org/mailman/listinfo/haskell-cafe&gt;,
	&lt;mailto:haskell-cafe-request@haskell.org?subject=unsubscribe&gt;</list-unsubscribe><list-archive>&lt;http://www.haskell.org/pipermail/haskell-cafe&gt;</list-archive><list-post>&lt;mailto:haskell-cafe@haskell.org&gt;</list-post><list-help>&lt;mailto:haskell-cafe-request@haskell.org?subject=help&gt;</list-help><list-subscribe>&lt;http://www.haskell.org/mailman/listinfo/haskell-cafe&gt;,
	&lt;mailto:haskell-cafe-request@haskell.org?subject=subscribe&gt;</list-subscribe><sender>haskell-cafe-bounces@haskell.org</sender><errors-to>haskell-cafe-bounces@haskell.org</errors-to></headers><normalized-references><normalized-message-id>0919C693-2BE6-438C-9090-B6A92F7D9DEE@dc.uba.ar</normalized-message-id><normalized-in-reply-to>1254291628.6704.2.camel@ios.cogsys.wiai.uni-bamberg.de</normalized-in-reply-to><normalized-reference>1254225392.6118.80.camel@ios.cogsys.wiai.uni-bamberg.de</normalized-reference><normalized-reference>799D986A-33A8-4C4F-B1AB-01C650EA1094@dc.uba.ar</normalized-reference><normalized-reference>1254291628.6704.2.camel@ios.cogsys.wiai.uni-bamberg.de</normalized-reference></normalized-references><body type="text/plain; charset=us-ascii; format=flowed; delsp=yes"><para depth="0">
On Sep 30, 2009, at 2:20 AM, Martin Hofmann wrote:

</para><quote depth="1"><quotepara depth="1">Thanks a lot.

</quotepara><quote depth="2"><quotepara depth="2">You ought to be able to add a Control.Monad.CatchIO.catch clause to
your interpreter to catch this kind of errors, if you want.
</quotepara></quote><quotepara depth="1">
I forgot to mention that this didn't work for me either.

</quotepara><quote depth="2"><quotepara depth="2">Thanks for the report!
</quotepara></quote><quotepara depth="1">
You are welcome. If you come up with a work around or a fix, I would  
appreciate if you let me know.

</quotepara><quotepara depth="1">Cheers,

</quotepara><quotefooter type="signature" depth="1" hash="5916449856287067778">Martin
</quotefooter></quote><para depth="0">
Apologies for a very very very late follow-up on this thread<br/>(<url>http://thread.gmane.org/gmane.comp.lang.haskell.cafe/64013</url> 
).

</para><para depth="0">It turns out that Control.Monad.CatchIO.catch was the right thing to  
use; you were probably bitten, just like me, by the fact that "eval"  
builds a thunk and returns it, but does not execute it. The following  
works fine for me:

</para><para depth="0">import Prelude hiding ( catch )
import Language.Haskell.Interpreter
import Control.Monad.CatchIO ( catch )
import Control.Exception.Extensible hiding ( catch )

</para><para depth="0">main :: IO ()
main = print =&lt;&lt; (runInterpreter (code `catch` handler))
     where s    = "let lst [a] = a in lst []"
           code = do setImports ["Prelude"]
                     forceM $ eval s
           handler (PatternMatchFail _) = return "catched!"

</para><para depth="0">forceM :: Monad m =&gt; m a -&gt; m a
forceM a = a &gt;&gt;= (\x -&gt; return $! x)

</para><para depth="0">When run, it prints  'Right "catched!"'. Notice that if you change the  
line 'forceM $ eval s' by an 'eval s', then the offending thunk is  
reduced by the print statement and the exception is thrown outside the  
catch.

</para><para depth="0">Hope this helps

</para><para depth="0">Daniel
</para><footer type="list-management" depth="0">_______________________________________________
Haskell-Cafe mailing list
<email>Haskell-Cafe@haskell.org</email>
<url>http://www.haskell.org/mailman/listinfo/haskell-cafe</url>
</footer></body></message>