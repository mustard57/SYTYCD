<message message-id="45EF2991.1020204@goop.org" list="org.kernel.vger.linux-kernel" id="24ca2eav5lyexn5d" type="development" date="2007-03-07T13:07:29-08:00" year="2007-01-01" year-month="2007-03-01" year-month-day="2007-03-07" thread-id="wx5qlruotsdfink2"><headers><envelope-from-line>From linux-kernel-owner+akpm=40zip.com.au-S1423004AbXCGVHe@vger.kernel.org  Wed Mar  7 13:10:21 2007</envelope-from-line><from personal="Jeremy Fitzhardinge" address="jeremy@goop.org">Jeremy Fitzhardinge &lt;jeremy@goop.org&gt;</from><to personal="tglx@linutronix.de" address="tglx@linutronix.de">tglx@linutronix.de</to><cc personal="Dan Hecht" address="dhecht@vmware.com">Dan Hecht &lt;dhecht@vmware.com&gt;</cc><subject normal="+ stupid-hack-to-make-mainline-build.patch added to -mm tree">Re: + stupid-hack-to-make-mainline-build.patch added to -mm tree</subject><return-path>linux-kernel-owner+akpm=40zip.com.au-S1423004AbXCGVHe@vger.kernel.org</return-path><received>from localhost (bix [127.0.0.1])
	by localhost.localdomain (8.12.10/8.12.10) with ESMTP id l27LAKfI029436
	for &lt;akpm@localhost&gt;; Wed, 7 Mar 2007 13:10:21 -0800</received><delivered-to>akpm@zipworld.com.au</delivered-to><received>from mail-zipworld.pacific.net.au [61.8.0.24]
	by localhost with POP3 (fetchmail-6.2.0)
	for akpm@localhost (single-drop); Wed, 07 Mar 2007 13:10:21 -0800 (PST)</received><received>from mailin1.pacific.net.au (mailin1.pacific.net.au [61.8.0.80])
	by mailstore2.syd.pacific.net.au (Postfix) with ESMTP id 6BD093C1A
	for &lt;akpm@zipworld.com.au&gt;; Thu,  8 Mar 2007 08:08:32 +1100 (EST)</received><received>from vger.kernel.org (unknown [209.132.176.167])
	by mailin1.pacific.net.au (Postfix) with ESMTP id 1124A161737
	for &lt;akpm@zip.com.au&gt;; Thu,  8 Mar 2007 08:08:32 +1100 (EST)</received><received>(majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1423004AbXCGVHe (ORCPT &lt;rfc822;akpm@zip.com.au&gt;);
	Wed, 7 Mar 2007 16:07:34 -0500</received><received>(majordomo@vger.kernel.org) by vger.kernel.org id S1423009AbXCGVHe
	(ORCPT &lt;rfc822;linux-kernel-outgoing&gt;);
	Wed, 7 Mar 2007 16:07:34 -0500</received><received>from gw.goop.org ([64.81.55.164]:46954 "EHLO mail.goop.org"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1423004AbXCGVHc (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 7 Mar 2007 16:07:32 -0500</received><received>by lurch.goop.org (Postfix, from userid 525)
	id E318C2C8045; Wed,  7 Mar 2007 13:07:09 -0800 (PST)</received><received>from lurch.goop.org (localhost [127.0.0.1])
	by lurch.goop.org (Postfix) with ESMTP id B79612C8042;
	Wed,  7 Mar 2007 13:07:08 -0800 (PST)</received><received>from [192.168.1.19] (adsl-69-107-66-101.dsl.pltn13.pacbell.net [69.107.66.101])
	by lurch.goop.org (Postfix) with ESMTP;
	Wed,  7 Mar 2007 13:07:08 -0800 (PST)</received><message-id>45EF2991.1020204@goop.org</message-id><date>Wed, 07 Mar 2007 13:07:29 -0800</date><user-agent>Thunderbird 1.5.0.9 (X11/20070212)</user-agent><mime-version>1.0</mime-version><references>&lt;200703060654.l266sVxr014860@shell0.pdx.osdl.net&gt;	 &lt;45ED16D2.3000202@vmware.com&gt; &lt;20070306084258.GA15745@elte.hu&gt;	 &lt;20070306084647.GA16280@elte.hu&gt;  &lt;45ED2C82.3080008@vmware.com&gt;	 &lt;1173178774.24738.311.camel@localhost.localdomain&gt;	 &lt;45EDD82F.90204@vmware.com&gt;	 &lt;1173225182.24738.507.camel@localhost.localdomain&gt;	 &lt;45EE0628.1080108@goop.org&gt;  &lt;45EE08E8.2020008@vmware.com&gt;	 &lt;1173228544.24738.514.camel@localhost.localdomain&gt;	 &lt;45EE0D10.7070807@vmware.com&gt;	 &lt;1173230305.24738.529.camel@localhost.localdomain&gt;	 &lt;45EE1EA3.90803@vmware.com&gt;	 &lt;1173256666.24738.576.camel@localhost.localdomain&gt;	 &lt;45EEF966.6060902@goop.org&gt; &lt;1173300032.24738.750.camel@localhost.localdomain&gt;</references><in-reply-to>&lt;1173300032.24738.750.camel@localhost.localdomain&gt;</in-reply-to><content-type>text/plain; charset=ISO-8859-15</content-type><content-transfer-encoding>7bit</content-transfer-encoding><x-virus-scanned>ClamAV using ClamSMTP by lurch.goop.org</x-virus-scanned><sender>linux-kernel-owner@vger.kernel.org</sender><precedence>bulk</precedence><x-mailing-list>linux-kernel@vger.kernel.org</x-mailing-list><x-spam-checker-version>SpamAssassin 3.0.2 (2004-11-16) on bix</x-spam-checker-version><x-spam-level/><x-spam-status>No, score=-1.7 required=2.0 tests=AWL,BAYES_00 
	autolearn=unavailable version=3.0.2</x-spam-status><status>RO</status><x-status/><x-keywords/><x-uid>3053</x-uid></headers><normalized-references><normalized-message-id>45EF2991.1020204@goop.org</normalized-message-id><normalized-in-reply-to>1173300032.24738.750.camel@localhost.localdomain</normalized-in-reply-to><normalized-reference>200703060654.l266sVxr014860@shell0.pdx.osdl.net</normalized-reference><normalized-reference>45ED16D2.3000202@vmware.com</normalized-reference><normalized-reference>20070306084258.GA15745@elte.hu</normalized-reference><normalized-reference>20070306084647.GA16280@elte.hu</normalized-reference><normalized-reference>45ED2C82.3080008@vmware.com</normalized-reference><normalized-reference>1173178774.24738.311.camel@localhost.localdomain</normalized-reference><normalized-reference>45EDD82F.90204@vmware.com</normalized-reference><normalized-reference>1173225182.24738.507.camel@localhost.localdomain</normalized-reference><normalized-reference>45EE0628.1080108@goop.org</normalized-reference><normalized-reference>45EE08E8.2020008@vmware.com</normalized-reference><normalized-reference>1173228544.24738.514.camel@localhost.localdomain</normalized-reference><normalized-reference>45EE0D10.7070807@vmware.com</normalized-reference><normalized-reference>1173230305.24738.529.camel@localhost.localdomain</normalized-reference><normalized-reference>45EE1EA3.90803@vmware.com</normalized-reference><normalized-reference>1173256666.24738.576.camel@localhost.localdomain</normalized-reference><normalized-reference>45EEF966.6060902@goop.org</normalized-reference><normalized-reference>1173300032.24738.750.camel@localhost.localdomain</normalized-reference></normalized-references><body type="text/plain; charset=iso-8859-15"><para depth="0">Thomas Gleixner wrote:
</para><quote depth="1"><quotepara depth="1">I tend to disagree. The clockevents infrastructure was designed to cope
with the existing mess of real hardware. The discussion over the last
days exposed me to even more exotic designs than the hardware vendors
were able to deliver until now.

</quotepara></quote><para depth="0">It's a different but related problem domain.  It's also an increasingly
common execution environment for a kernel to find itself in.  Dealing
with proper paravirtualized timer devices is a big improvement over
trying to reliably deal with fully virtualized hardware timers, which
simply can't make the same guarantees that real hardware can make - such
as "you will definitely get N ns of CPU time between doing the
delta-&gt;absolute computation and programming the match register".

</para><quote depth="1"><quotepara depth="1">I know exactly where you are heading:

</quotepara><quotepara depth="1">Offload the handling of hypervisor design decisions to the kernel and
let us deal with that. So we need to implement 128 bit math to convert
back and forth and I expect more interesting things to creep up. 

</quotepara></quote><para depth="0">I wouldn't put it that way.  We've been getting a lot of pressure to
keep the pv_ops interface as small as possible.  Reusing existing kernel
interfaces rather than making up new ones is a good way to do that.  The
clock infrastructure certainly cleans things up; earlier Xen patches
made a complete copy of the old kernel/time.c and hacked it around,
which isn't what anyone wants to do.

</para><quote depth="1"><quotepara depth="1">All this is of _NO_ use and benefit for the kernel itself.

</quotepara></quote><para depth="0">Lots of people want to run Linux in virtual machines.  If we can make
sane kernel changes to help those users, then that is of use an benefit
to the kernel.

</para><quote depth="1"><quotepara depth="1">Real hardware copes well with relative deltas for the events, even when
it is match register based. I thought long about the support for
absolute expiry values in cycles and decided against them to avoid that
math hackery, which you folks now demand.

</quotepara></quote><para depth="0">Not really.  Xen and VMI interfaces both use absolute monotonic time for
timeouts, which is certainly a common case for such interfaces
(pthread_cond_timedwait, for example).  Converting delta to absolute is
clearly simple, but it does introduce an added bit of non-determinism if
your CPU can be preempted from outside at any time.  I presume SMM or
similar interrupts can cause the same problem on real hardware.

</para><para depth="0">I guess the worst case for real hardware is an absolute-time match
register which only compares for match==now rather than match&lt;=now,
since you could completely lose the time event if you miss the deadline.

</para><quote depth="1"><quote depth="2"><quotepara depth="2">static const struct clock_event_device xen_clockevent = {
	.name = "xen",
	.features = CLOCK_EVT_FEAT_ONESHOT,

</quotepara><quotepara depth="2">	.max_delta_ns = 0x7fffffff,
	.min_delta_ns = 100,	/* ? */

</quotepara><quotepara depth="2">	.mult = 1&lt;&lt;XEN_SHIFT,
	.shift = XEN_SHIFT,

</quotepara></quote><quotepara depth="1">We can optimize this by skipping the conversion via a feature flag.

</quotepara></quote><para depth="0">The clocksource needed the shift for ntp warping.  Does the clockevent
need a shift at all?  Could I just set mult/shift to 1/0?

</para><quote depth="1"><quotepara depth="1">Your implementation is almost the perfect prototype, if you move the
128 bit hackery into the hypervisor and hide it away from the kernel :)

</quotepara></quote><para depth="0">The point is to use the tsc to avoid making any hypercalls, so dealing
with the tsc-&gt;ns conversion has to happen on the guest side somehow.

</para><quote depth="1"><quotepara depth="1">One of these is perfectly fine for _ALL_ of the hypervisor folks.
Anything else is just a backwards decision for the kernel.

</quotepara></quote><para depth="0">That would certainly be ideal.  We'll look at the xen, vmi, lguest and
kvm paravirtualized time models and see how much they really have in
common.  I'm a bit curious about how vmi's time events make their way
back into the system.

</para><para depth="0">    J
-
To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
the body of a message to <email>majordomo@vger.kernel.org</email>
More majordomo info at  <url>http://vger.kernel.org/majordomo-info.html</url>
Please read the FAQ at  <url>http://www.tux.org/lkml/</url>

</para></body></message>