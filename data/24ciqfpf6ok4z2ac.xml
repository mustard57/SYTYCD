<message message-id="3F15C243.2090204@wiredotter.com" list="org.evolt.lists.thelist" id="24ciqfpf6ok4z2ac" type="general" date="2003-07-16T14:23:15-07:00" year="2003-01-01" year-month="2003-07-01" year-month-day="2003-07-16" thread-id="2xsy5ippk7larglb"><headers><envelope-from-line>From judah@wiredotter.com  Wed Jul 16 22:23:15 2003</envelope-from-line><from personal="Judah McAuley" address="judah@wiredotter.com">Judah McAuley &lt;judah@wiredotter.com&gt;</from><subject normal="[thelist] CFMX problem - HTML output cut off - and characterencoding">[thelist] CFMX problem - HTML output cut off - and characterencoding</subject><date>Wed, 16 Jul 2003 14:23:15 -0700</date><in-reply-to>&lt;3F15B59D.9060002@worlddomination.net&gt;</in-reply-to><references>&lt;1058340852.9595@LISTSERV.alphashop.com&gt;
	&lt;0a7801c34ba5$0707bae0$0300a8c0@client1&gt;
	&lt;3F15B59D.9060002@worlddomination.net&gt;</references><message-id>3F15C243.2090204@wiredotter.com</message-id><content-type>text/plain; charset=iso-8859-1</content-type><mime-version>1.0</mime-version></headers><normalized-references><normalized-message-id>3F15C243.2090204@wiredotter.com</normalized-message-id><normalized-in-reply-to>3F15B59D.9060002@worlddomination.net</normalized-in-reply-to><normalized-reference>1058340852.9595@LISTSERV.alphashop.com</normalized-reference><normalized-reference>0a7801c34ba5$0707bae0$0300a8c0@client1</normalized-reference><normalized-reference>3F15B59D.9060002@worlddomination.net</normalized-reference></normalized-references><body type="text/plain; charset=iso-8859-1"><para depth="0">Steve Lewis wrote:
</para><quote depth="1"><quotepara depth="1">While it does not generate parse or run-time errors, Jeff and I agree 
that it is not our style.  It seems pretty obvious to me that cfset is 
not the intended place for such expressions as 1+1 and for execution of 
UDFs which do not return useful values.  The optimal place, in the eyes 
of the language designers, was the cfscript tag.
</quotepara></quote><para depth="0">
It should be noted that that the language designers (or at least the 
language documentors) are pretty ambiguous.  Take a look at the 
Developing ColdFusion Applications book that comes with CF Studio 5.  In 
the section on Creating and Using Structures, you will see a great 
example of their ambiguity.  In an early section they provide the 
following syntax for inserting values from a form into a structure:

</para><para depth="0">&lt;cfset rc=StructInsert(employee, "firstname", "#FORM.firstname#")&gt;
&lt;cfset rc=StructInsert(employee, "lastname", "#FORM.lastname#")&gt;
&lt;cfset rc=StructInsert(employee, "email", "#FORM.email#")&gt;
&lt;cfset rc=StructInsert(employee, "phone", "#FORM.phone#")&gt;
&lt;cfset rc=StructInsert(employee, "department", "#FORM.department#")&gt;

</para><para depth="0">rc, in this example, is being used as a temp variable.  They could leave 
out the rc= and acheive exactly the same result, but they put in the rc= 
because cfset is "supposed" to be for assigning values.  Also note that 
they double quotes and pound signs around the form fields are entirely 
unnecessary and pretty ugly as well.

</para><para depth="0">Later in the same section though they switch syntaxes completely and 
provide this example:

</para><para depth="0">&lt;cfscript&gt;
      employee=StructNew();
      StructInsert(employee, "firstname", "#FORM.firstname#");
      StructInsert(employee, "lastname", "#FORM.lastname#");
      StructInsert(employee, "email", "#FORM.email#");
      StructInsert(employee, "phone", "#FORM.phone#");
      StructInsert(employee, "department", "#FORM.department#");
&lt;/cfscript&gt;

</para><para depth="0">This avoids the temp variable entirely by putting it in a cfscript 
block.  Do note that they still put the ugly double quote pound signs 
around the form variables though.

</para><para depth="0">So it seems that Allaire/Macromedia is ambiguous around the intention of 
cfset.  I didn't find anywhere in the documentation (a very quick 
perusal at a few likely spots) that they left out the assignment 
altogether, but they certainly seem to be countenancing the use of 
throw-away assignments within cfsets.

</para><para depth="0">For what it's worth, I favor the cfscript solution over the cfset 
whenever possible.

</para><para depth="0">Judah
</para></body></message>